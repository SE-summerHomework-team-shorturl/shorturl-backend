/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2871.0, "minX": 0.0, "maxY": 14533.0, "series": [{"data": [[0.0, 2871.0], [0.1, 3167.0], [0.2, 3758.0], [0.3, 4214.0], [0.4, 4539.0], [0.5, 5132.0], [0.6, 5142.0], [0.7, 5146.0], [0.8, 5150.0], [0.9, 5153.0], [1.0, 5160.0], [1.1, 5168.0], [1.2, 5172.0], [1.3, 5173.0], [1.4, 5176.0], [1.5, 5177.0], [1.6, 5179.0], [1.7, 5181.0], [1.8, 5183.0], [1.9, 5187.0], [2.0, 5195.0], [2.1, 5200.0], [2.2, 5202.0], [2.3, 5204.0], [2.4, 5205.0], [2.5, 5207.0], [2.6, 5208.0], [2.7, 5209.0], [2.8, 5211.0], [2.9, 5212.0], [3.0, 5214.0], [3.1, 5218.0], [3.2, 5222.0], [3.3, 5225.0], [3.4, 5227.0], [3.5, 5229.0], [3.6, 5231.0], [3.7, 5235.0], [3.8, 5237.0], [3.9, 5239.0], [4.0, 5242.0], [4.1, 5246.0], [4.2, 5251.0], [4.3, 5254.0], [4.4, 5261.0], [4.5, 5263.0], [4.6, 5269.0], [4.7, 5274.0], [4.8, 5278.0], [4.9, 5284.0], [5.0, 5289.0], [5.1, 5293.0], [5.2, 5296.0], [5.3, 5298.0], [5.4, 5298.0], [5.5, 5301.0], [5.6, 5304.0], [5.7, 5305.0], [5.8, 5306.0], [5.9, 5307.0], [6.0, 5309.0], [6.1, 5311.0], [6.2, 5316.0], [6.3, 5319.0], [6.4, 5321.0], [6.5, 5324.0], [6.6, 5326.0], [6.7, 5329.0], [6.8, 5331.0], [6.9, 5335.0], [7.0, 5337.0], [7.1, 5340.0], [7.2, 5344.0], [7.3, 5348.0], [7.4, 5353.0], [7.5, 5357.0], [7.6, 5360.0], [7.7, 5364.0], [7.8, 5365.0], [7.9, 5368.0], [8.0, 5371.0], [8.1, 5373.0], [8.2, 5375.0], [8.3, 5376.0], [8.4, 5379.0], [8.5, 5381.0], [8.6, 5383.0], [8.7, 5385.0], [8.8, 5386.0], [8.9, 5387.0], [9.0, 5389.0], [9.1, 5391.0], [9.2, 5392.0], [9.3, 5393.0], [9.4, 5395.0], [9.5, 5398.0], [9.6, 5400.0], [9.7, 5402.0], [9.8, 5405.0], [9.9, 5408.0], [10.0, 5413.0], [10.1, 5416.0], [10.2, 5421.0], [10.3, 5423.0], [10.4, 5426.0], [10.5, 5429.0], [10.6, 5432.0], [10.7, 5437.0], [10.8, 5439.0], [10.9, 5441.0], [11.0, 5443.0], [11.1, 5446.0], [11.2, 5447.0], [11.3, 5452.0], [11.4, 5458.0], [11.5, 5463.0], [11.6, 5466.0], [11.7, 5470.0], [11.8, 5473.0], [11.9, 5475.0], [12.0, 5479.0], [12.1, 5483.0], [12.2, 5488.0], [12.3, 5496.0], [12.4, 5501.0], [12.5, 5508.0], [12.6, 5513.0], [12.7, 5521.0], [12.8, 5530.0], [12.9, 5534.0], [13.0, 5540.0], [13.1, 5546.0], [13.2, 5551.0], [13.3, 5554.0], [13.4, 5556.0], [13.5, 5558.0], [13.6, 5561.0], [13.7, 5565.0], [13.8, 5569.0], [13.9, 5574.0], [14.0, 5578.0], [14.1, 5581.0], [14.2, 5586.0], [14.3, 5589.0], [14.4, 5593.0], [14.5, 5597.0], [14.6, 5602.0], [14.7, 5606.0], [14.8, 5609.0], [14.9, 5611.0], [15.0, 5612.0], [15.1, 5615.0], [15.2, 5617.0], [15.3, 5619.0], [15.4, 5621.0], [15.5, 5623.0], [15.6, 5627.0], [15.7, 5630.0], [15.8, 5633.0], [15.9, 5636.0], [16.0, 5642.0], [16.1, 5647.0], [16.2, 5653.0], [16.3, 5656.0], [16.4, 5658.0], [16.5, 5661.0], [16.6, 5664.0], [16.7, 5667.0], [16.8, 5669.0], [16.9, 5673.0], [17.0, 5675.0], [17.1, 5676.0], [17.2, 5678.0], [17.3, 5679.0], [17.4, 5681.0], [17.5, 5683.0], [17.6, 5685.0], [17.7, 5687.0], [17.8, 5690.0], [17.9, 5692.0], [18.0, 5696.0], [18.1, 5698.0], [18.2, 5700.0], [18.3, 5703.0], [18.4, 5705.0], [18.5, 5706.0], [18.6, 5708.0], [18.7, 5711.0], [18.8, 5713.0], [18.9, 5714.0], [19.0, 5717.0], [19.1, 5718.0], [19.2, 5720.0], [19.3, 5722.0], [19.4, 5724.0], [19.5, 5726.0], [19.6, 5729.0], [19.7, 5733.0], [19.8, 5737.0], [19.9, 5739.0], [20.0, 5744.0], [20.1, 5746.0], [20.2, 5748.0], [20.3, 5751.0], [20.4, 5754.0], [20.5, 5756.0], [20.6, 5758.0], [20.7, 5760.0], [20.8, 5762.0], [20.9, 5765.0], [21.0, 5767.0], [21.1, 5769.0], [21.2, 5772.0], [21.3, 5774.0], [21.4, 5776.0], [21.5, 5778.0], [21.6, 5781.0], [21.7, 5782.0], [21.8, 5784.0], [21.9, 5787.0], [22.0, 5789.0], [22.1, 5791.0], [22.2, 5794.0], [22.3, 5799.0], [22.4, 5803.0], [22.5, 5805.0], [22.6, 5809.0], [22.7, 5812.0], [22.8, 5815.0], [22.9, 5818.0], [23.0, 5822.0], [23.1, 5825.0], [23.2, 5828.0], [23.3, 5831.0], [23.4, 5835.0], [23.5, 5837.0], [23.6, 5839.0], [23.7, 5841.0], [23.8, 5844.0], [23.9, 5848.0], [24.0, 5852.0], [24.1, 5856.0], [24.2, 5860.0], [24.3, 5865.0], [24.4, 5867.0], [24.5, 5870.0], [24.6, 5877.0], [24.7, 5883.0], [24.8, 5886.0], [24.9, 5891.0], [25.0, 5893.0], [25.1, 5899.0], [25.2, 5902.0], [25.3, 5906.0], [25.4, 5910.0], [25.5, 5915.0], [25.6, 5918.0], [25.7, 5922.0], [25.8, 5924.0], [25.9, 5927.0], [26.0, 5928.0], [26.1, 5930.0], [26.2, 5932.0], [26.3, 5934.0], [26.4, 5937.0], [26.5, 5941.0], [26.6, 5942.0], [26.7, 5946.0], [26.8, 5950.0], [26.9, 5956.0], [27.0, 5962.0], [27.1, 5967.0], [27.2, 5970.0], [27.3, 5975.0], [27.4, 5979.0], [27.5, 5983.0], [27.6, 5988.0], [27.7, 5994.0], [27.8, 5997.0], [27.9, 6002.0], [28.0, 6005.0], [28.1, 6007.0], [28.2, 6010.0], [28.3, 6013.0], [28.4, 6015.0], [28.5, 6016.0], [28.6, 6019.0], [28.7, 6022.0], [28.8, 6024.0], [28.9, 6026.0], [29.0, 6028.0], [29.1, 6031.0], [29.2, 6032.0], [29.3, 6036.0], [29.4, 6040.0], [29.5, 6044.0], [29.6, 6045.0], [29.7, 6046.0], [29.8, 6048.0], [29.9, 6051.0], [30.0, 6054.0], [30.1, 6058.0], [30.2, 6061.0], [30.3, 6064.0], [30.4, 6067.0], [30.5, 6069.0], [30.6, 6073.0], [30.7, 6076.0], [30.8, 6079.0], [30.9, 6083.0], [31.0, 6086.0], [31.1, 6089.0], [31.2, 6093.0], [31.3, 6096.0], [31.4, 6100.0], [31.5, 6102.0], [31.6, 6107.0], [31.7, 6110.0], [31.8, 6115.0], [31.9, 6119.0], [32.0, 6122.0], [32.1, 6126.0], [32.2, 6129.0], [32.3, 6132.0], [32.4, 6135.0], [32.5, 6137.0], [32.6, 6140.0], [32.7, 6142.0], [32.8, 6144.0], [32.9, 6148.0], [33.0, 6151.0], [33.1, 6154.0], [33.2, 6160.0], [33.3, 6164.0], [33.4, 6167.0], [33.5, 6171.0], [33.6, 6176.0], [33.7, 6182.0], [33.8, 6190.0], [33.9, 6196.0], [34.0, 6202.0], [34.1, 6207.0], [34.2, 6212.0], [34.3, 6219.0], [34.4, 6223.0], [34.5, 6225.0], [34.6, 6228.0], [34.7, 6233.0], [34.8, 6237.0], [34.9, 6241.0], [35.0, 6244.0], [35.1, 6248.0], [35.2, 6254.0], [35.3, 6258.0], [35.4, 6260.0], [35.5, 6262.0], [35.6, 6264.0], [35.7, 6265.0], [35.8, 6267.0], [35.9, 6271.0], [36.0, 6275.0], [36.1, 6279.0], [36.2, 6285.0], [36.3, 6293.0], [36.4, 6300.0], [36.5, 6308.0], [36.6, 6314.0], [36.7, 6322.0], [36.8, 6326.0], [36.9, 6330.0], [37.0, 6333.0], [37.1, 6336.0], [37.2, 6340.0], [37.3, 6342.0], [37.4, 6346.0], [37.5, 6350.0], [37.6, 6358.0], [37.7, 6363.0], [37.8, 6366.0], [37.9, 6369.0], [38.0, 6373.0], [38.1, 6376.0], [38.2, 6382.0], [38.3, 6388.0], [38.4, 6396.0], [38.5, 6400.0], [38.6, 6404.0], [38.7, 6410.0], [38.8, 6421.0], [38.9, 6430.0], [39.0, 6440.0], [39.1, 6447.0], [39.2, 6456.0], [39.3, 6463.0], [39.4, 6468.0], [39.5, 6473.0], [39.6, 6477.0], [39.7, 6486.0], [39.8, 6493.0], [39.9, 6502.0], [40.0, 6508.0], [40.1, 6515.0], [40.2, 6518.0], [40.3, 6523.0], [40.4, 6528.0], [40.5, 6535.0], [40.6, 6541.0], [40.7, 6545.0], [40.8, 6551.0], [40.9, 6557.0], [41.0, 6562.0], [41.1, 6568.0], [41.2, 6574.0], [41.3, 6581.0], [41.4, 6587.0], [41.5, 6593.0], [41.6, 6598.0], [41.7, 6604.0], [41.8, 6607.0], [41.9, 6609.0], [42.0, 6611.0], [42.1, 6615.0], [42.2, 6617.0], [42.3, 6619.0], [42.4, 6622.0], [42.5, 6625.0], [42.6, 6628.0], [42.7, 6631.0], [42.8, 6636.0], [42.9, 6639.0], [43.0, 6647.0], [43.1, 6653.0], [43.2, 6663.0], [43.3, 6678.0], [43.4, 6689.0], [43.5, 6700.0], [43.6, 6712.0], [43.7, 6718.0], [43.8, 6727.0], [43.9, 6736.0], [44.0, 6743.0], [44.1, 6751.0], [44.2, 6758.0], [44.3, 6762.0], [44.4, 6769.0], [44.5, 6774.0], [44.6, 6782.0], [44.7, 6792.0], [44.8, 6801.0], [44.9, 6806.0], [45.0, 6810.0], [45.1, 6814.0], [45.2, 6820.0], [45.3, 6826.0], [45.4, 6832.0], [45.5, 6841.0], [45.6, 6851.0], [45.7, 6860.0], [45.8, 6866.0], [45.9, 6871.0], [46.0, 6874.0], [46.1, 6878.0], [46.2, 6882.0], [46.3, 6886.0], [46.4, 6893.0], [46.5, 6902.0], [46.6, 6909.0], [46.7, 6920.0], [46.8, 6930.0], [46.9, 6937.0], [47.0, 6942.0], [47.1, 6947.0], [47.2, 6953.0], [47.3, 6960.0], [47.4, 6968.0], [47.5, 6975.0], [47.6, 6980.0], [47.7, 6989.0], [47.8, 6993.0], [47.9, 6997.0], [48.0, 7003.0], [48.1, 7006.0], [48.2, 7009.0], [48.3, 7015.0], [48.4, 7022.0], [48.5, 7027.0], [48.6, 7030.0], [48.7, 7031.0], [48.8, 7034.0], [48.9, 7038.0], [49.0, 7041.0], [49.1, 7048.0], [49.2, 7057.0], [49.3, 7064.0], [49.4, 7073.0], [49.5, 7085.0], [49.6, 7095.0], [49.7, 7108.0], [49.8, 7115.0], [49.9, 7123.0], [50.0, 7131.0], [50.1, 7139.0], [50.2, 7144.0], [50.3, 7149.0], [50.4, 7153.0], [50.5, 7158.0], [50.6, 7160.0], [50.7, 7164.0], [50.8, 7169.0], [50.9, 7174.0], [51.0, 7182.0], [51.1, 7188.0], [51.2, 7194.0], [51.3, 7206.0], [51.4, 7214.0], [51.5, 7218.0], [51.6, 7221.0], [51.7, 7224.0], [51.8, 7227.0], [51.9, 7229.0], [52.0, 7233.0], [52.1, 7236.0], [52.2, 7238.0], [52.3, 7240.0], [52.4, 7241.0], [52.5, 7242.0], [52.6, 7243.0], [52.7, 7245.0], [52.8, 7245.0], [52.9, 7247.0], [53.0, 7249.0], [53.1, 7254.0], [53.2, 7259.0], [53.3, 7265.0], [53.4, 7269.0], [53.5, 7271.0], [53.6, 7273.0], [53.7, 7275.0], [53.8, 7277.0], [53.9, 7279.0], [54.0, 7282.0], [54.1, 7286.0], [54.2, 7288.0], [54.3, 7289.0], [54.4, 7290.0], [54.5, 7291.0], [54.6, 7292.0], [54.7, 7294.0], [54.8, 7296.0], [54.9, 7297.0], [55.0, 7299.0], [55.1, 7300.0], [55.2, 7302.0], [55.3, 7305.0], [55.4, 7306.0], [55.5, 7308.0], [55.6, 7310.0], [55.7, 7312.0], [55.8, 7314.0], [55.9, 7317.0], [56.0, 7318.0], [56.1, 7320.0], [56.2, 7322.0], [56.3, 7324.0], [56.4, 7327.0], [56.5, 7329.0], [56.6, 7332.0], [56.7, 7335.0], [56.8, 7337.0], [56.9, 7338.0], [57.0, 7340.0], [57.1, 7341.0], [57.2, 7343.0], [57.3, 7344.0], [57.4, 7345.0], [57.5, 7346.0], [57.6, 7348.0], [57.7, 7352.0], [57.8, 7356.0], [57.9, 7358.0], [58.0, 7362.0], [58.1, 7363.0], [58.2, 7365.0], [58.3, 7368.0], [58.4, 7371.0], [58.5, 7373.0], [58.6, 7376.0], [58.7, 7379.0], [58.8, 7381.0], [58.9, 7384.0], [59.0, 7386.0], [59.1, 7388.0], [59.2, 7389.0], [59.3, 7390.0], [59.4, 7393.0], [59.5, 7394.0], [59.6, 7397.0], [59.7, 7399.0], [59.8, 7403.0], [59.9, 7405.0], [60.0, 7409.0], [60.1, 7410.0], [60.2, 7414.0], [60.3, 7415.0], [60.4, 7419.0], [60.5, 7421.0], [60.6, 7425.0], [60.7, 7427.0], [60.8, 7430.0], [60.9, 7431.0], [61.0, 7434.0], [61.1, 7436.0], [61.2, 7438.0], [61.3, 7440.0], [61.4, 7443.0], [61.5, 7444.0], [61.6, 7446.0], [61.7, 7449.0], [61.8, 7451.0], [61.9, 7453.0], [62.0, 7455.0], [62.1, 7457.0], [62.2, 7458.0], [62.3, 7460.0], [62.4, 7461.0], [62.5, 7463.0], [62.6, 7464.0], [62.7, 7466.0], [62.8, 7468.0], [62.9, 7470.0], [63.0, 7472.0], [63.1, 7475.0], [63.2, 7479.0], [63.3, 7481.0], [63.4, 7482.0], [63.5, 7484.0], [63.6, 7486.0], [63.7, 7488.0], [63.8, 7490.0], [63.9, 7492.0], [64.0, 7494.0], [64.1, 7495.0], [64.2, 7497.0], [64.3, 7499.0], [64.4, 7501.0], [64.5, 7504.0], [64.6, 7506.0], [64.7, 7509.0], [64.8, 7511.0], [64.9, 7514.0], [65.0, 7516.0], [65.1, 7518.0], [65.2, 7519.0], [65.3, 7521.0], [65.4, 7522.0], [65.5, 7524.0], [65.6, 7526.0], [65.7, 7527.0], [65.8, 7530.0], [65.9, 7531.0], [66.0, 7533.0], [66.1, 7533.0], [66.2, 7535.0], [66.3, 7536.0], [66.4, 7537.0], [66.5, 7539.0], [66.6, 7541.0], [66.7, 7543.0], [66.8, 7545.0], [66.9, 7547.0], [67.0, 7549.0], [67.1, 7552.0], [67.2, 7555.0], [67.3, 7558.0], [67.4, 7561.0], [67.5, 7563.0], [67.6, 7565.0], [67.7, 7569.0], [67.8, 7573.0], [67.9, 7575.0], [68.0, 7578.0], [68.1, 7581.0], [68.2, 7584.0], [68.3, 7586.0], [68.4, 7588.0], [68.5, 7590.0], [68.6, 7594.0], [68.7, 7597.0], [68.8, 7600.0], [68.9, 7602.0], [69.0, 7605.0], [69.1, 7608.0], [69.2, 7611.0], [69.3, 7615.0], [69.4, 7617.0], [69.5, 7622.0], [69.6, 7627.0], [69.7, 7629.0], [69.8, 7632.0], [69.9, 7636.0], [70.0, 7640.0], [70.1, 7645.0], [70.2, 7651.0], [70.3, 7655.0], [70.4, 7659.0], [70.5, 7661.0], [70.6, 7664.0], [70.7, 7667.0], [70.8, 7670.0], [70.9, 7672.0], [71.0, 7675.0], [71.1, 7677.0], [71.2, 7680.0], [71.3, 7683.0], [71.4, 7686.0], [71.5, 7689.0], [71.6, 7692.0], [71.7, 7693.0], [71.8, 7695.0], [71.9, 7699.0], [72.0, 7703.0], [72.1, 7707.0], [72.2, 7711.0], [72.3, 7717.0], [72.4, 7722.0], [72.5, 7727.0], [72.6, 7731.0], [72.7, 7734.0], [72.8, 7736.0], [72.9, 7740.0], [73.0, 7745.0], [73.1, 7749.0], [73.2, 7752.0], [73.3, 7756.0], [73.4, 7761.0], [73.5, 7765.0], [73.6, 7768.0], [73.7, 7770.0], [73.8, 7773.0], [73.9, 7777.0], [74.0, 7780.0], [74.1, 7782.0], [74.2, 7787.0], [74.3, 7790.0], [74.4, 7794.0], [74.5, 7798.0], [74.6, 7801.0], [74.7, 7807.0], [74.8, 7811.0], [74.9, 7815.0], [75.0, 7819.0], [75.1, 7822.0], [75.2, 7826.0], [75.3, 7829.0], [75.4, 7832.0], [75.5, 7835.0], [75.6, 7839.0], [75.7, 7841.0], [75.8, 7844.0], [75.9, 7846.0], [76.0, 7851.0], [76.1, 7858.0], [76.2, 7863.0], [76.3, 7868.0], [76.4, 7872.0], [76.5, 7876.0], [76.6, 7879.0], [76.7, 7884.0], [76.8, 7887.0], [76.9, 7891.0], [77.0, 7896.0], [77.1, 7901.0], [77.2, 7908.0], [77.3, 7914.0], [77.4, 7923.0], [77.5, 7931.0], [77.6, 7938.0], [77.7, 7944.0], [77.8, 7947.0], [77.9, 7951.0], [78.0, 7954.0], [78.1, 7962.0], [78.2, 7966.0], [78.3, 7972.0], [78.4, 7976.0], [78.5, 7981.0], [78.6, 7987.0], [78.7, 7992.0], [78.8, 7997.0], [78.9, 8001.0], [79.0, 8004.0], [79.1, 8010.0], [79.2, 8019.0], [79.3, 8024.0], [79.4, 8033.0], [79.5, 8041.0], [79.6, 8048.0], [79.7, 8054.0], [79.8, 8065.0], [79.9, 8070.0], [80.0, 8078.0], [80.1, 8082.0], [80.2, 8086.0], [80.3, 8092.0], [80.4, 8098.0], [80.5, 8101.0], [80.6, 8107.0], [80.7, 8114.0], [80.8, 8119.0], [80.9, 8127.0], [81.0, 8135.0], [81.1, 8141.0], [81.2, 8150.0], [81.3, 8158.0], [81.4, 8165.0], [81.5, 8173.0], [81.6, 8182.0], [81.7, 8188.0], [81.8, 8194.0], [81.9, 8201.0], [82.0, 8209.0], [82.1, 8217.0], [82.2, 8226.0], [82.3, 8231.0], [82.4, 8239.0], [82.5, 8248.0], [82.6, 8256.0], [82.7, 8264.0], [82.8, 8273.0], [82.9, 8282.0], [83.0, 8291.0], [83.1, 8297.0], [83.2, 8303.0], [83.3, 8313.0], [83.4, 8321.0], [83.5, 8328.0], [83.6, 8331.0], [83.7, 8342.0], [83.8, 8351.0], [83.9, 8360.0], [84.0, 8371.0], [84.1, 8379.0], [84.2, 8389.0], [84.3, 8397.0], [84.4, 8409.0], [84.5, 8418.0], [84.6, 8427.0], [84.7, 8436.0], [84.8, 8450.0], [84.9, 8458.0], [85.0, 8466.0], [85.1, 8474.0], [85.2, 8487.0], [85.3, 8499.0], [85.4, 8512.0], [85.5, 8522.0], [85.6, 8530.0], [85.7, 8542.0], [85.8, 8550.0], [85.9, 8565.0], [86.0, 8575.0], [86.1, 8587.0], [86.2, 8600.0], [86.3, 8610.0], [86.4, 8620.0], [86.5, 8637.0], [86.6, 8649.0], [86.7, 8658.0], [86.8, 8667.0], [86.9, 8679.0], [87.0, 8685.0], [87.1, 8693.0], [87.2, 8703.0], [87.3, 8717.0], [87.4, 8735.0], [87.5, 8746.0], [87.6, 8759.0], [87.7, 8776.0], [87.8, 8793.0], [87.9, 8807.0], [88.0, 8820.0], [88.1, 8831.0], [88.2, 8848.0], [88.3, 8859.0], [88.4, 8870.0], [88.5, 8888.0], [88.6, 8906.0], [88.7, 8919.0], [88.8, 8933.0], [88.9, 8946.0], [89.0, 8960.0], [89.1, 8974.0], [89.2, 8987.0], [89.3, 8998.0], [89.4, 9010.0], [89.5, 9022.0], [89.6, 9033.0], [89.7, 9046.0], [89.8, 9062.0], [89.9, 9075.0], [90.0, 9086.0], [90.1, 9099.0], [90.2, 9105.0], [90.3, 9133.0], [90.4, 9153.0], [90.5, 9164.0], [90.6, 9191.0], [90.7, 9210.0], [90.8, 9230.0], [90.9, 9247.0], [91.0, 9273.0], [91.1, 9310.0], [91.2, 9321.0], [91.3, 9336.0], [91.4, 9357.0], [91.5, 9381.0], [91.6, 9405.0], [91.7, 9412.0], [91.8, 9420.0], [91.9, 9432.0], [92.0, 9446.0], [92.1, 9461.0], [92.2, 9475.0], [92.3, 9502.0], [92.4, 9539.0], [92.5, 9578.0], [92.6, 9618.0], [92.7, 9669.0], [92.8, 9708.0], [92.9, 9732.0], [93.0, 9765.0], [93.1, 9798.0], [93.2, 9830.0], [93.3, 9851.0], [93.4, 9888.0], [93.5, 9932.0], [93.6, 9984.0], [93.7, 10019.0], [93.8, 10101.0], [93.9, 10120.0], [94.0, 10127.0], [94.1, 10153.0], [94.2, 10178.0], [94.3, 10197.0], [94.4, 10241.0], [94.5, 10274.0], [94.6, 10291.0], [94.7, 10312.0], [94.8, 10326.0], [94.9, 10349.0], [95.0, 10374.0], [95.1, 10405.0], [95.2, 10432.0], [95.3, 10456.0], [95.4, 10540.0], [95.5, 10565.0], [95.6, 10590.0], [95.7, 10621.0], [95.8, 10658.0], [95.9, 10686.0], [96.0, 10710.0], [96.1, 10743.0], [96.2, 10781.0], [96.3, 10817.0], [96.4, 10859.0], [96.5, 10907.0], [96.6, 10954.0], [96.7, 11002.0], [96.8, 11024.0], [96.9, 11070.0], [97.0, 11131.0], [97.1, 11183.0], [97.2, 11223.0], [97.3, 11299.0], [97.4, 11363.0], [97.5, 11399.0], [97.6, 11426.0], [97.7, 11459.0], [97.8, 11515.0], [97.9, 11556.0], [98.0, 11592.0], [98.1, 11618.0], [98.2, 11640.0], [98.3, 11667.0], [98.4, 11689.0], [98.5, 11715.0], [98.6, 11734.0], [98.7, 11773.0], [98.8, 11815.0], [98.9, 11854.0], [99.0, 11891.0], [99.1, 11944.0], [99.2, 12037.0], [99.3, 12097.0], [99.4, 12180.0], [99.5, 12310.0], [99.6, 12445.0], [99.7, 12578.0], [99.8, 12734.0], [99.9, 13144.0], [100.0, 14533.0]], "isOverall": false, "label": "Add To My Short URLs Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 2800.0, "maxY": 1169.0, "series": [{"data": [[2800.0, 2.0], [2900.0, 13.0], [3000.0, 1.0], [3100.0, 18.0], [3200.0, 3.0], [3300.0, 2.0], [3400.0, 1.0], [3500.0, 6.0], [3700.0, 6.0], [3600.0, 2.0], [3800.0, 3.0], [3900.0, 10.0], [4100.0, 2.0], [4300.0, 6.0], [4200.0, 11.0], [4400.0, 4.0], [4500.0, 19.0], [4600.0, 1.0], [4800.0, 2.0], [4900.0, 1.0], [5100.0, 410.0], [5000.0, 1.0], [5200.0, 834.0], [5300.0, 1042.0], [5400.0, 688.0], [5600.0, 905.0], [5500.0, 551.0], [5700.0, 1036.0], [5800.0, 699.0], [6100.0, 638.0], [6000.0, 885.0], [5900.0, 685.0], [6200.0, 612.0], [6300.0, 523.0], [6400.0, 350.0], [6500.0, 432.0], [6600.0, 469.0], [6700.0, 322.0], [6800.0, 425.0], [6900.0, 366.0], [7000.0, 423.0], [7100.0, 398.0], [7200.0, 949.0], [7300.0, 1169.0], [7400.0, 1154.0], [7500.0, 1120.0], [7600.0, 779.0], [7700.0, 660.0], [7800.0, 630.0], [7900.0, 452.0], [8000.0, 393.0], [8100.0, 357.0], [8200.0, 318.0], [8300.0, 291.0], [8400.0, 249.0], [8500.0, 220.0], [8600.0, 240.0], [8700.0, 176.0], [8800.0, 178.0], [8900.0, 187.0], [9000.0, 196.0], [9100.0, 137.0], [9200.0, 105.0], [9300.0, 125.0], [9400.0, 180.0], [9500.0, 66.0], [9600.0, 55.0], [9700.0, 82.0], [9800.0, 80.0], [9900.0, 57.0], [10000.0, 37.0], [10200.0, 83.0], [10100.0, 127.0], [10300.0, 108.0], [10400.0, 68.0], [10700.0, 76.0], [10500.0, 73.0], [10600.0, 80.0], [10900.0, 51.0], [11000.0, 63.0], [11100.0, 48.0], [10800.0, 58.0], [11200.0, 41.0], [11500.0, 69.0], [11300.0, 50.0], [11400.0, 63.0], [11600.0, 99.0], [11700.0, 87.0], [11800.0, 62.0], [12000.0, 35.0], [12100.0, 28.0], [12200.0, 20.0], [11900.0, 35.0], [12300.0, 17.0], [12700.0, 11.0], [12400.0, 20.0], [12500.0, 19.0], [12600.0, 16.0], [12800.0, 3.0], [13000.0, 9.0], [13100.0, 9.0], [13200.0, 7.0], [13300.0, 3.0], [12900.0, 2.0], [13500.0, 2.0], [13600.0, 2.0], [13700.0, 1.0], [13400.0, 2.0], [13800.0, 2.0], [14100.0, 1.0], [14500.0, 1.0]], "isOverall": false, "label": "Add To My Short URLs Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 14500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 25000.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 25000.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 25000.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4494.634382760538, "minX": 1.59420774E12, "maxY": 5000.0, "series": [{"data": [[1.59420774E12, 5000.0], [1.5942078E12, 4494.634382760538]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5942078E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 5075.0, "minX": 1.0, "maxY": 10558.0, "series": [{"data": [[4.0, 9003.0], [8.0, 6574.6], [9.0, 5108.0], [10.0, 8618.0], [13.0, 7923.0], [19.0, 7842.833333333334], [22.0, 7907.0], [23.0, 8865.0], [28.0, 8471.0], [33.0, 8579.0], [32.0, 8218.0], [35.0, 8133.0], [39.0, 7400.0], [43.0, 7532.0], [42.0, 8015.833333333334], [49.0, 8549.0], [48.0, 8503.666666666666], [51.0, 8452.0], [53.0, 8544.0], [52.0, 7515.0], [63.0, 8815.300000000003], [66.0, 7500.0], [69.0, 8596.0], [75.0, 8789.0], [74.0, 8180.0], [73.0, 7514.0], [72.0, 7890.571428571428], [78.0, 8967.0], [83.0, 5075.0], [82.0, 7885.5], [80.0, 8181.0], [91.0, 8990.0], [90.0, 7885.571428571428], [92.0, 8189.0], [98.0, 6255.0], [102.0, 8418.0], [101.0, 6492.0], [100.0, 7395.0], [107.0, 9140.0], [111.0, 8167.5], [109.0, 8238.333333333334], [114.0, 8720.666666666666], [118.0, 8156.0], [122.0, 8152.0], [121.0, 8272.333333333334], [133.0, 7949.0], [132.0, 9219.25], [128.0, 7369.166666666666], [143.0, 9133.0], [142.0, 8213.0], [138.0, 7968.4], [149.0, 8445.0], [144.0, 8989.0], [159.0, 8991.0], [155.0, 8468.0], [153.0, 7352.0], [152.0, 8487.42857142857], [167.0, 8671.0], [165.0, 8119.333333333333], [162.0, 8816.0], [161.0, 7387.0], [175.0, 8470.0], [174.0, 8780.4], [169.0, 8331.666666666666], [183.0, 8859.0], [182.0, 8052.0], [181.0, 8571.0], [179.0, 8327.0], [176.0, 8045.0], [190.0, 7822.8], [185.0, 8049.0], [184.0, 7482.0], [197.0, 7523.0], [196.0, 8973.0], [195.0, 8830.0], [194.0, 7514.0], [193.0, 8831.0], [192.0, 7146.5], [207.0, 8013.0], [206.0, 6911.0], [204.0, 8020.0], [203.0, 7529.0], [200.0, 8743.0], [215.0, 6383.0], [214.0, 8603.333333333334], [212.0, 6364.0], [210.0, 6424.0], [208.0, 8011.0], [222.0, 6770.0], [221.0, 6567.0], [220.0, 6546.0], [219.0, 7991.0], [218.0, 6486.0], [217.0, 7231.5], [229.0, 8824.0], [228.0, 6547.0], [226.0, 6540.0], [224.0, 6562.5], [239.0, 7766.0], [238.0, 8250.0], [237.0, 8693.0], [236.0, 8816.0], [234.0, 7962.0], [232.0, 7836.0], [245.0, 8476.0], [243.0, 9246.0], [241.0, 7086.0], [240.0, 10228.0], [253.0, 7688.333333333333], [250.0, 8059.0], [249.0, 8417.0], [270.0, 8136.0], [271.0, 8780.0], [268.0, 7232.0], [259.0, 7692.5], [258.0, 7175.0], [256.0, 7476.666666666667], [266.0, 7236.0], [265.0, 7204.0], [264.0, 7204.0], [263.0, 7631.0], [261.0, 8042.0], [260.0, 7158.0], [286.0, 8056.0], [284.0, 8457.0], [282.0, 8272.0], [281.0, 7253.0], [280.0, 7493.6], [279.0, 7250.5], [273.0, 7267.0], [272.0, 7832.0], [291.0, 7692.25], [301.0, 7373.0], [302.0, 8662.0], [300.0, 7821.0], [298.0, 7374.0], [296.0, 7356.0], [293.0, 8660.0], [292.0, 8655.0], [289.0, 8327.5], [288.0, 7299.0], [318.0, 7420.0], [319.0, 8145.0], [317.0, 7420.0], [316.0, 7527.0], [315.0, 7527.0], [314.0, 7432.0], [312.0, 7432.0], [311.0, 8259.0], [304.0, 7835.0], [310.0, 7781.5], [309.0, 7818.333333333333], [332.0, 7642.5], [330.0, 8680.0], [329.0, 7636.0], [328.0, 8666.0], [327.0, 8803.0], [320.0, 8664.0], [326.0, 7638.0], [325.0, 7639.0], [323.0, 8441.0], [321.0, 8658.0], [350.0, 8138.0], [351.0, 8140.0], [348.0, 7748.0], [339.0, 7669.5], [337.0, 7658.0], [336.0, 7948.0], [347.0, 8311.0], [346.0, 7689.0], [345.0, 8123.0], [344.0, 7687.0], [342.0, 9218.0], [340.0, 9230.0], [367.0, 7721.0], [363.0, 8431.0], [361.0, 7932.0], [359.0, 8286.0], [358.0, 8140.8], [357.0, 7724.0], [355.0, 8999.0], [371.0, 7931.0], [383.0, 7813.5], [380.0, 8529.0], [379.0, 8188.666666666667], [377.0, 8134.0], [376.0, 8177.333333333333], [373.0, 7711.0], [368.0, 7718.0], [370.0, 8980.0], [369.0, 7719.0], [399.0, 8605.5], [395.0, 8727.0], [392.0, 7932.0], [391.0, 8665.0], [390.0, 8521.0], [389.0, 8421.0], [386.0, 8656.0], [385.0, 8342.666666666666], [402.0, 8534.0], [415.0, 8866.0], [414.0, 8867.0], [411.0, 9137.0], [409.0, 7679.0], [406.0, 8852.0], [405.0, 9202.333333333334], [401.0, 7691.0], [400.0, 8525.333333333334], [429.0, 8069.5], [431.0, 7770.0], [428.0, 7981.0], [427.0, 7772.0], [425.0, 9082.0], [424.0, 7661.0], [422.0, 7664.0], [420.0, 7664.666666666667], [417.0, 8850.0], [416.0, 8316.0], [435.0, 8852.0], [445.0, 8522.0], [447.0, 7779.5], [444.0, 7919.0], [442.0, 7769.0], [441.0, 7769.0], [437.0, 9081.0], [436.0, 8652.0], [434.0, 7772.0], [433.0, 7771.5], [432.0, 8512.0], [461.0, 7788.0], [456.0, 8535.0], [455.0, 7773.0], [453.0, 7780.0], [452.0, 8025.333333333333], [449.0, 7770.0], [448.0, 7776.0], [477.0, 7803.0], [478.0, 7787.0], [476.0, 8399.0], [475.0, 7787.0], [473.0, 7790.0], [470.0, 8367.5], [467.0, 8190.0], [466.0, 8199.0], [465.0, 7942.375], [494.0, 7802.5], [495.0, 7785.0], [492.0, 7991.0], [483.0, 7792.75], [491.0, 7812.0], [490.0, 7813.5], [489.0, 8527.0], [488.0, 8378.0], [486.0, 8386.0], [485.0, 7991.333333333333], [499.0, 7815.0], [505.0, 7824.0], [510.0, 8384.0], [506.0, 8518.0], [503.0, 7830.0], [502.0, 7815.0], [501.0, 7830.0], [500.0, 7814.0], [498.0, 7832.0], [497.0, 7816.0], [496.0, 8383.0], [518.0, 8389.0], [542.0, 7595.0], [540.0, 8660.0], [536.0, 8256.0], [534.0, 8069.666666666667], [526.0, 9480.0], [524.0, 7844.0], [516.0, 9386.0], [514.0, 7829.0], [512.0, 8389.5], [568.0, 7605.0], [572.0, 8122.0], [574.0, 7595.0], [570.0, 7604.0], [566.0, 9102.0], [564.0, 9204.0], [556.0, 8655.0], [554.0, 8662.0], [548.0, 8238.0], [546.0, 8830.0], [544.0, 7583.0], [606.0, 7608.25], [604.0, 7603.0], [602.0, 7864.5], [596.0, 7592.0], [594.0, 7593.5], [590.0, 7603.0], [586.0, 7592.0], [634.0, 7659.0], [632.0, 8321.0], [630.0, 7997.0], [628.0, 7629.0], [622.0, 7622.0], [618.0, 7611.0], [616.0, 7877.0], [608.0, 8987.0], [670.0, 8614.0], [662.0, 8002.0], [660.0, 8571.0], [656.0, 8551.0], [652.0, 8694.5], [650.0, 8432.0], [648.0, 8539.0], [642.0, 8321.0], [640.0, 8116.0], [696.0, 8191.0], [694.0, 8854.0], [688.0, 8267.0], [684.0, 8084.0], [680.0, 8083.5], [678.0, 8709.5], [672.0, 8217.0], [708.0, 8843.0], [730.0, 7828.0], [734.0, 8793.0], [728.0, 7994.0], [724.0, 8820.0], [722.0, 8403.666666666666], [718.0, 8563.5], [716.0, 8589.333333333334], [712.0, 8508.0], [706.0, 8565.0], [704.0, 8196.0], [766.0, 8250.0], [764.0, 8141.0], [762.0, 8137.0], [754.0, 7815.0], [752.0, 7819.8], [746.0, 7935.0], [744.0, 8817.0], [736.0, 8243.0], [798.0, 8310.0], [796.0, 7813.0], [788.0, 8239.0], [784.0, 8059.75], [776.0, 8892.0], [768.0, 8135.0], [828.0, 7813.0], [826.0, 8017.0], [824.0, 7960.333333333333], [820.0, 7825.0], [818.0, 7822.0], [816.0, 7827.0], [808.0, 8122.0], [806.0, 7825.0], [862.0, 8761.0], [856.0, 8548.0], [854.0, 7780.0], [846.0, 8256.0], [840.0, 8238.0], [836.0, 8013.0], [834.0, 8227.0], [894.0, 7890.0], [892.0, 7985.0], [890.0, 8103.0], [878.0, 8105.0], [876.0, 8883.5], [874.0, 7970.5], [870.0, 8237.0], [864.0, 7900.333333333333], [924.0, 7950.666666666667], [920.0, 8092.0], [918.0, 7878.0], [916.0, 7878.0], [914.0, 8097.0], [912.0, 8032.0], [910.0, 8676.5], [904.0, 8102.0], [902.0, 8102.0], [900.0, 7884.0], [956.0, 8479.0], [958.0, 7841.0], [954.0, 8391.0], [934.0, 7873.0], [930.0, 7959.5], [928.0, 8106.0], [950.0, 7968.0], [948.0, 8401.0], [946.0, 7859.0], [944.0, 8078.0], [942.0, 7865.0], [940.0, 7861.0], [936.0, 8082.0], [966.0, 9065.0], [986.0, 8563.0], [984.0, 9475.0], [982.0, 7834.0], [974.0, 8075.0], [972.0, 7833.0], [964.0, 9068.0], [962.0, 7877.333333333333], [960.0, 7838.0], [998.0, 8253.0], [1022.0, 7868.0], [1016.0, 8199.0], [1014.0, 7580.625], [1006.0, 8209.0], [1004.0, 8383.0], [1002.0, 7809.0], [1000.0, 7847.333333333333], [994.0, 7821.0], [992.0, 7817.0], [1080.0, 8494.5], [1076.0, 8082.0], [1068.0, 8695.0], [1048.0, 7972.0], [1040.0, 8217.0], [1036.0, 7539.0], [1032.0, 7533.0], [1024.0, 7546.6], [1132.0, 8026.0], [1128.0, 8155.4], [1104.0, 8009.0], [1088.0, 7912.0], [1204.0, 7952.0], [1208.0, 7560.0], [1200.0, 8185.0], [1192.0, 7538.0], [1184.0, 9162.0], [1180.0, 7540.0], [1176.0, 7964.5], [1156.0, 7536.666666666667], [1152.0, 8417.0], [1276.0, 8912.0], [1264.0, 7706.0], [1256.0, 8276.0], [1244.0, 7713.0], [1240.0, 9177.0], [1336.0, 7685.0], [1328.0, 8159.0], [1324.0, 8117.500000000001], [1312.0, 7690.0], [1304.0, 7692.0], [1296.0, 8292.0], [1284.0, 7799.0], [1404.0, 8608.5], [1400.0, 8255.0], [1384.0, 8245.5], [1376.0, 7672.0], [1368.0, 8667.0], [1356.0, 7675.0], [1348.0, 8686.0], [1344.0, 8016.0], [1416.0, 8570.0], [1464.0, 7665.333333333333], [1456.0, 8532.0], [1452.0, 7632.0], [1444.0, 7644.833333333333], [1436.0, 7651.0], [1432.0, 7658.0], [1424.0, 7666.875], [1412.0, 7931.666666666667], [1408.0, 8243.75], [1528.0, 7503.0], [1524.0, 7903.5], [1520.0, 7517.0], [1516.0, 7910.0], [1512.0, 7533.0], [1508.0, 8409.0], [1496.0, 7561.75], [1476.0, 7597.0], [1548.0, 7591.0], [1596.0, 7664.75], [1588.0, 7778.0], [1584.0, 7409.0], [1580.0, 7521.0], [1556.0, 7671.375], [1544.0, 7605.0], [1540.0, 7610.0], [1536.0, 7499.0], [1656.0, 7381.0], [1660.0, 7501.0], [1648.0, 7391.0], [1644.0, 7394.0], [1640.0, 7948.0], [1628.0, 7497.0], [1624.0, 7385.0], [1616.0, 7391.0], [1608.0, 7960.0], [1604.0, 8051.5], [1676.0, 7376.0], [1724.0, 7346.0], [1720.0, 7805.0], [1712.0, 7350.0], [1708.0, 7399.0], [1688.0, 7365.0], [1680.0, 7380.0], [1672.0, 7386.0], [1664.0, 8067.333333333333], [1760.0, 7322.0], [1784.0, 7327.0], [1772.0, 7950.0], [1768.0, 7324.666666666667], [1764.0, 7326.0], [1756.0, 7325.0], [1752.0, 7330.0], [1736.0, 7333.5], [1732.0, 7893.0], [1728.0, 7569.0], [1852.0, 7310.0], [1848.0, 7300.0], [1840.0, 7445.000000000001], [1832.0, 7321.0], [1824.0, 7313.0], [1800.0, 8448.0], [1792.0, 8508.0], [1916.0, 7796.5], [1912.0, 7710.428571428571], [1896.0, 7600.0], [1892.0, 8253.75], [1888.0, 7616.333333333333], [1872.0, 8374.0], [1864.0, 7309.0], [1860.0, 7308.666666666667], [1856.0, 7310.0], [1972.0, 7661.0], [1960.0, 7484.0], [1952.0, 8259.0], [1944.0, 7487.0], [2040.0, 8118.0], [2036.0, 7648.0], [2028.0, 7572.666666666667], [2020.0, 8031.333333333333], [2012.0, 7887.25], [1996.0, 7804.0], [1992.0, 7879.0], [1984.0, 7770.0], [2160.0, 7279.0], [2168.0, 7375.0], [2152.0, 7286.0], [2144.0, 7289.0], [2136.0, 7516.0], [2056.0, 8076.0], [2096.0, 7345.5], [2272.0, 7704.0], [2240.0, 7250.0], [2248.0, 7251.0], [2280.0, 7696.0], [2176.0, 7381.428571428572], [2192.0, 7279.0], [2232.0, 7907.0], [2224.0, 7829.0], [2208.0, 7269.0], [2264.0, 7536.5], [2256.0, 7602.0], [2400.0, 7164.0], [2424.0, 7518.0], [2312.0, 7233.0], [2320.0, 7227.0], [2344.0, 7478.666666666667], [2336.0, 7467.0], [2392.0, 7169.0], [2384.0, 8783.0], [2376.0, 7183.0], [2536.0, 7843.0], [2528.0, 7825.0], [2504.0, 7219.833333333334], [2456.0, 7554.0], [2432.0, 7506.333333333333], [2632.0, 7008.0], [2576.0, 7709.0], [2568.0, 7160.0], [2648.0, 7337.0], [2616.0, 7479.0], [2704.0, 6957.0], [2752.0, 6913.0], [2800.0, 6935.0], [2784.0, 6948.0], [2696.0, 6976.0], [2744.0, 7175.0], [2728.0, 7954.0], [2720.0, 6951.833333333334], [2768.0, 7419.0], [2760.0, 6910.0], [2840.0, 7042.0], [2928.0, 7037.0], [2816.0, 7069.0], [2896.0, 7027.0], [2888.0, 7794.0], [2872.0, 7028.0], [2856.0, 7269.0], [2848.0, 7160.0], [3040.0, 7182.5], [3064.0, 7292.5], [2968.0, 7084.0], [2960.0, 7255.0], [2944.0, 7038.0], [3032.0, 7328.0], [3000.0, 7245.0], [2976.0, 7029.0], [3088.0, 7468.5], [3176.0, 7391.5], [3072.0, 7402.25], [3120.0, 7426.0], [3112.0, 7545.5], [3104.0, 7114.0], [3320.0, 7575.0], [3312.0, 6868.0], [3216.0, 7717.0], [3272.0, 6995.0], [3256.0, 6881.75], [3248.0, 7013.0], [3448.0, 6843.0], [3352.0, 7272.5], [3416.0, 7070.0], [3408.0, 6964.5], [3400.0, 6867.5], [3376.0, 7873.0], [3368.0, 7397.0], [3568.0, 6691.0], [3528.0, 6936.0], [3576.0, 6830.0], [3520.0, 6760.0], [3536.0, 7324.666666666667], [3512.0, 8065.0], [3480.0, 7630.0], [3472.0, 6979.666666666667], [3488.0, 6813.0], [3696.0, 6975.0], [3648.0, 6906.0], [3656.0, 7833.0], [3664.0, 7121.0], [3672.0, 7593.0], [3704.0, 6855.875], [3680.0, 7347.0], [3608.0, 7041.333333333333], [3592.0, 6829.0], [3640.0, 6795.5], [3624.0, 6814.0], [3616.0, 7393.0], [3808.0, 6547.0], [3792.0, 7284.5], [3800.0, 6811.0], [3832.0, 7335.0], [3712.0, 6813.0], [3736.0, 7148.0], [3768.0, 6560.333333333333], [3760.0, 7501.0], [3944.0, 6556.0], [3904.0, 7136.0], [3952.0, 6551.0], [3912.0, 7011.0], [3920.0, 6527.0], [3936.0, 6539.0], [3840.0, 6552.5], [3896.0, 6513.0], [3880.0, 6518.0], [4064.0, 7085.0], [4072.0, 6618.0], [4080.0, 7062.0], [4032.0, 6837.142857142858], [4040.0, 6835.25], [4024.0, 7103.0], [3968.0, 6639.0], [3992.0, 7190.333333333333], [4016.0, 7378.0], [4304.0, 6411.0], [4336.0, 6611.0], [4224.0, 7053.2], [4272.0, 6928.5], [4208.0, 6742.0], [4096.0, 6835.249999999999], [4112.0, 6613.0], [4144.0, 6663.875000000001], [4192.0, 6620.0], [4176.0, 6788.666666666666], [4560.0, 6261.0], [4592.0, 7235.0], [4544.0, 6374.333333333333], [4384.0, 6512.833333333333], [4464.0, 6271.0], [4448.0, 6684.333333333333], [4416.0, 6265.0], [4832.0, 6576.0], [4816.0, 6525.25], [4736.0, 6141.6], [4752.0, 6138.5], [4784.0, 6338.111111111112], [4848.0, 6887.0], [4800.0, 6301.142857142857], [4624.0, 6567.0], [4640.0, 6555.5], [4656.0, 6335.0], [4720.0, 6250.0], [4688.0, 6501.0], [4672.0, 6986.0], [4896.0, 6177.666666666667], [4992.0, 5932.333333333333], [4864.0, 6457.833333333333], [4912.0, 6183.0], [4976.0, 6071.125], [4944.0, 6289.8], [4928.0, 6359.0], [4337.0, 6369.0], [4241.0, 6686.666666666667], [4097.0, 6605.0], [4113.0, 6603.0], [4145.0, 7746.0], [4209.0, 6615.0], [4273.0, 6517.0], [4385.0, 6817.0], [4545.0, 6807.0], [4481.0, 6690.5], [4593.0, 6280.0], [4353.0, 6367.0], [4401.0, 6778.5], [4465.0, 6264.5], [4449.0, 7164.0], [4433.0, 6575.0], [4817.0, 6229.0], [4849.0, 6579.099999999999], [4737.0, 6547.75], [4769.0, 6189.5], [4785.0, 6231.0], [4801.0, 6661.0], [4641.0, 6341.0], [4721.0, 6253.0], [4705.0, 6583.5], [4689.0, 6312.0], [4881.0, 6083.0], [4993.0, 5969.833333333333], [4897.0, 6105.4], [4913.0, 6573.714285714285], [4977.0, 5965.9], [4961.0, 6160.555555555556], [2169.0, 7373.0], [2145.0, 7285.0], [2121.0, 7292.0], [2113.0, 7294.0], [2097.0, 8107.0], [2065.0, 7800.4], [2089.0, 8109.0], [2289.0, 7720.0], [2241.0, 7360.0], [2281.0, 7696.0], [2273.0, 8157.0], [2193.0, 7267.0], [2209.0, 7453.0], [2265.0, 7831.0], [2321.0, 7692.0], [2425.0, 7172.0], [2313.0, 7445.0], [2393.0, 7168.333333333333], [2377.0, 7298.0], [2361.0, 7435.0], [2353.0, 7254.0], [2345.0, 9114.0], [2337.0, 7715.5], [2545.0, 7424.5], [2553.0, 7806.5], [2537.0, 7422.0], [2449.0, 7297.0], [2433.0, 7160.0], [2465.0, 7828.75], [2505.0, 7947.0], [2665.0, 7319.0], [2681.0, 7363.666666666667], [2633.0, 7069.0], [2673.0, 7037.0], [2657.0, 7392.25], [2593.0, 7548.0], [2577.0, 7713.0], [2585.0, 7267.4], [2649.0, 7563.0], [2809.0, 6930.0], [2761.0, 7842.0], [2801.0, 7189.0], [2785.0, 7029.0], [2729.0, 6951.0], [2721.0, 7431.0], [2769.0, 6859.0], [2929.0, 7569.0], [2889.0, 7039.0], [2921.0, 7262.0], [2833.0, 7305.0], [2841.0, 7040.0], [2873.0, 7142.666666666667], [2865.0, 7197.75], [2905.0, 7028.0], [2897.0, 7031.333333333333], [2881.0, 7150.0], [3065.0, 7460.0], [3057.0, 7894.5], [3009.0, 7052.0], [3017.0, 7025.0], [3049.0, 7668.4], [2969.0, 7248.0], [2961.0, 7250.0], [2985.0, 7032.0], [3025.0, 7329.0], [3185.0, 7098.444444444444], [3089.0, 7120.0], [3153.0, 6889.874999999999], [3145.0, 7065.5], [3129.0, 6807.0], [3121.0, 7153.2], [3113.0, 7444.0], [3305.0, 6869.0], [3321.0, 7769.0], [3209.0, 7222.5], [3289.0, 7417.0], [3265.0, 6873.0], [3257.0, 6877.0], [3249.0, 7114.0], [3425.0, 6947.857142857143], [3433.0, 7376.0], [3345.0, 7753.0], [3417.0, 6897.0], [3377.0, 7374.666666666667], [3369.0, 7355.0], [3361.0, 7310.0], [3561.0, 6700.0], [3521.0, 7050.0], [3577.0, 7496.0], [3529.0, 6943.0], [3537.0, 6738.0], [3553.0, 6713.0], [3457.0, 7239.5], [3513.0, 6771.0], [3489.0, 6809.0], [3545.0, 6724.0], [3705.0, 7251.0], [3681.0, 7286.0], [3649.0, 6903.0], [3585.0, 7224.0], [3593.0, 7033.0], [3601.0, 6826.0], [3641.0, 7710.0], [3625.0, 7377.5], [3673.0, 7228.666666666667], [3665.0, 6833.25], [3817.0, 6539.0], [3833.0, 6645.0], [3777.0, 6559.0], [3785.0, 6549.0], [3801.0, 6902.0], [3809.0, 6543.0], [3729.0, 7150.0], [3769.0, 6565.0], [3761.0, 8076.0], [3753.0, 6925.0], [3745.0, 6581.0], [3953.0, 7124.0], [3961.0, 6917.571428571428], [3945.0, 7020.0], [3841.0, 6643.0], [3897.0, 6513.0], [3881.0, 6517.0], [3873.0, 6643.571428571429], [4033.0, 7098.0], [4041.0, 6703.333333333333], [4073.0, 7513.333333333333], [3977.0, 7563.5], [3993.0, 7646.0], [4025.0, 7210.5], [4001.0, 6748.0], [4146.0, 6738.0], [4290.0, 6567.833333333334], [4242.0, 7285.0], [4306.0, 6407.0], [4130.0, 6849.0], [4114.0, 7062.0], [4098.0, 6864.0], [4194.0, 6735.0], [4178.0, 6723.5], [4274.0, 7084.5], [4498.0, 6646.0], [4482.0, 6721.0], [4514.0, 6580.2], [4354.0, 6366.5], [4402.0, 7242.0], [4466.0, 6722.5], [4450.0, 6259.0], [4754.0, 6241.0], [4738.0, 6142.0], [4770.0, 6349.0], [4786.0, 6134.0], [4850.0, 6779.25], [4610.0, 7565.0], [4642.0, 6445.0], [4706.0, 6749.0], [4882.0, 6189.5], [4898.0, 6620.6], [4914.0, 6288.777777777778], [4962.0, 6144.0], [4339.0, 6368.0], [4243.0, 8480.0], [4307.0, 6410.0], [4291.0, 6763.0], [4115.0, 6610.0], [4195.0, 6954.0], [4179.0, 6947.0], [4499.0, 7091.5], [4563.0, 6903.0], [4531.0, 6932.166666666666], [4355.0, 6544.0], [4371.0, 6709.25], [4403.0, 6619.5], [4451.0, 6265.0], [4739.0, 6141.0], [4787.0, 6123.0], [4835.0, 6617.571428571428], [4819.0, 6234.5], [4611.0, 6349.0], [4643.0, 6553.0], [4883.0, 6230.4], [4995.0, 6079.166666666667], [4867.0, 6172.333333333334], [4899.0, 6290.222222222222], [4979.0, 6380.0], [4963.0, 6420.333333333333], [4947.0, 6116.666666666667], [4931.0, 6049.0], [1085.0, 7631.333333333333], [1077.0, 7881.0], [1073.0, 8318.2], [1065.0, 8132.5], [1057.0, 8305.5], [1045.0, 7699.571428571428], [1037.0, 7676.0], [1133.0, 7938.0], [1129.0, 7945.0], [1117.0, 8058.75], [1113.0, 8118.666666666667], [1101.0, 8061.0], [1213.0, 7611.6], [1205.0, 7562.0], [1193.0, 7940.0], [1189.0, 8411.5], [1185.0, 9049.0], [1181.0, 7540.0], [1173.0, 8855.0], [1169.0, 8417.5], [1161.0, 8066.0], [1157.0, 7691.5], [1277.0, 7702.0], [1265.0, 8696.5], [1261.0, 7704.0], [1253.0, 7708.0], [1245.0, 7817.0], [1241.0, 9279.0], [1237.0, 9053.5], [1233.0, 7760.285714285714], [1225.0, 7942.5], [1337.0, 8608.0], [1341.0, 10558.0], [1333.0, 7689.0], [1317.0, 8132.0], [1309.0, 7998.0], [1305.0, 8503.0], [1297.0, 7864.0], [1285.0, 7697.0], [1281.0, 7698.0], [1357.0, 7868.000000000001], [1397.0, 9965.5], [1393.0, 8821.0], [1389.0, 8450.5], [1385.0, 8132.0], [1365.0, 7674.0], [1361.0, 7674.0], [1353.0, 8601.0], [1345.0, 7684.0], [1465.0, 7617.0], [1457.0, 7624.0], [1453.0, 7633.0], [1449.0, 7793.0], [1445.0, 7641.0], [1437.0, 8547.0], [1425.0, 9223.0], [1413.0, 7679.5], [1533.0, 7499.5], [1529.0, 7501.0], [1525.0, 7516.0], [1517.0, 8610.0], [1505.0, 7547.0], [1497.0, 7991.0], [1481.0, 7585.0], [1477.0, 7854.0], [1597.0, 7643.0], [1585.0, 7689.0], [1581.0, 7402.0], [1577.0, 7439.857142857142], [1569.0, 7782.0], [1565.0, 7414.0], [1561.0, 7415.0], [1557.0, 9219.0], [1545.0, 7713.0], [1537.0, 8390.0], [1661.0, 8361.0], [1649.0, 7497.0], [1629.0, 7961.0], [1625.0, 7388.0], [1601.0, 7399.0], [1725.0, 8542.0], [1709.0, 7358.0], [1701.0, 7359.8], [1693.0, 7772.666666666667], [1681.0, 8473.0], [1789.0, 7429.8], [1781.0, 7796.0], [1777.0, 7329.5], [1761.0, 7322.0], [1757.0, 7315.0], [1753.0, 7786.0], [1749.0, 7329.5], [1741.0, 7734.25], [1841.0, 9315.0], [1829.0, 7317.5], [1821.0, 7957.5], [1809.0, 7308.0], [1805.0, 7310.0], [1801.0, 7635.0], [1797.0, 7307.0], [1793.0, 8358.0], [1869.0, 7615.0], [1913.0, 7779.0], [1905.0, 7785.666666666667], [1901.0, 7596.0], [1897.0, 8158.666666666667], [1893.0, 7901.0], [1881.0, 7729.333333333333], [1857.0, 7302.0], [1865.0, 7615.0], [1861.0, 8126.0], [1929.0, 8237.0], [1977.0, 7463.0], [1981.0, 7465.0], [1973.0, 8110.0], [1961.0, 7483.0], [1953.0, 8259.0], [1949.0, 7483.0], [1945.0, 7479.0], [1925.0, 8584.5], [1921.0, 8008.0], [2033.0, 8325.333333333334], [1997.0, 8469.0], [2029.0, 8225.0], [2017.0, 8339.0], [2013.0, 8107.0], [2005.0, 8389.0], [2162.0, 7280.0], [2146.0, 7737.0], [2066.0, 7991.0], [2050.0, 7792.333333333333], [2090.0, 7514.0], [2282.0, 7700.0], [2290.0, 8707.0], [2274.0, 7835.0], [2258.0, 8819.0], [2250.0, 7265.428571428572], [2242.0, 7362.0], [2234.0, 7252.5], [2178.0, 7617.0], [2194.0, 7279.0], [2186.0, 7324.0], [2210.0, 7379.0], [2402.0, 7164.0], [2410.0, 7161.0], [2330.0, 7415.833333333334], [2322.0, 7336.0], [2314.0, 7787.0], [2394.0, 7529.0], [2370.0, 7417.666666666667], [2354.0, 7199.0], [2346.0, 7738.0], [2530.0, 7935.0], [2546.0, 7821.0], [2554.0, 7926.0], [2538.0, 7146.0], [2450.0, 7515.0], [2442.0, 7157.0], [2434.0, 7157.0], [2474.0, 7154.0], [2466.0, 7388.0], [2522.0, 7380.0], [2514.0, 7544.142857142857], [2570.0, 7095.0], [2666.0, 7014.0], [2658.0, 7006.0], [2634.0, 7008.0], [2626.0, 7445.0], [2562.0, 7214.0], [2578.0, 8766.0], [2586.0, 7247.0], [2618.0, 7849.0], [2602.0, 7624.333333333333], [2594.0, 8019.5], [2794.0, 6936.0], [2762.0, 7424.0], [2810.0, 6960.333333333333], [2754.0, 7417.0], [2786.0, 6945.0], [2706.0, 6956.0], [2690.0, 7375.142857142857], [2730.0, 6952.0], [2778.0, 7853.5], [2770.0, 7019.5], [2938.0, 7199.5], [2842.0, 7273.0], [2818.0, 7187.0], [2906.0, 7328.0], [2898.0, 7264.0], [2882.0, 7037.0], [3066.0, 7872.0], [3042.0, 7353.75], [3026.0, 7138.0], [3010.0, 7024.0], [2970.0, 7570.0], [2994.0, 7034.0], [2978.0, 7100.0], [3186.0, 7200.0], [3194.0, 7171.8], [3170.0, 6807.0], [3074.0, 7504.0], [3154.0, 7133.0], [3130.0, 6810.0], [3114.0, 7433.0], [3106.0, 7690.0], [3306.0, 6868.0], [3226.0, 7160.4], [3202.0, 7211.5], [3274.0, 6921.333333333333], [3266.0, 6991.0], [3258.0, 7100.0], [3434.0, 6959.5], [3450.0, 7177.0], [3426.0, 7059.0], [3338.0, 7109.571428571428], [3330.0, 7255.666666666667], [3346.0, 7728.5], [3354.0, 6978.0], [3370.0, 7304.0], [3362.0, 7087.2], [3394.0, 7286.0], [3522.0, 7220.5], [3570.0, 6760.5], [3538.0, 7741.0], [3562.0, 6874.0], [3458.0, 7372.0], [3498.0, 6801.0], [3490.0, 7624.0], [3602.0, 7325.0], [3706.0, 6590.0], [3666.0, 7444.0], [3682.0, 7435.0], [3594.0, 6824.0], [3586.0, 7496.0], [3642.0, 6911.0], [3626.0, 7829.0], [3618.0, 7382.0], [3738.0, 7149.0], [3834.0, 6525.0], [3818.0, 6539.0], [3810.0, 7265.0], [3714.0, 6700.5], [3770.0, 6560.0], [3754.0, 6571.0], [3746.0, 6578.0], [3802.0, 6555.0], [3962.0, 7470.0], [3946.0, 6556.0], [3858.0, 6637.333333333333], [3890.0, 6762.0], [3882.0, 6517.285714285715], [3922.0, 7483.5], [4042.0, 6887.0], [4034.0, 6989.0], [4050.0, 6748.5], [4082.0, 6873.0], [3970.0, 6638.0], [3986.0, 6746.0], [4002.0, 7338.0], [4308.0, 6444.333333333333], [4228.0, 6872.5], [4292.0, 7197.0], [4116.0, 6741.0], [4580.0, 6312.0], [4484.0, 6822.0], [4564.0, 6473.0], [4548.0, 7692.0], [4356.0, 6933.0], [4388.0, 6755.0], [4452.0, 6935.0], [4820.0, 6225.0], [4740.0, 6143.0], [4852.0, 6424.8], [4756.0, 6224.25], [4788.0, 6415.0], [4804.0, 6130.0], [4660.0, 6440.0], [4724.0, 6410.0], [4692.0, 6373.25], [4676.0, 6328.0], [4868.0, 6605.0], [4980.0, 5983.0], [4996.0, 5937.0], [4884.0, 6078.0], [4900.0, 6057.0], [4916.0, 6301.111111111111], [4948.0, 6046.0], [4932.0, 6052.0], [4149.0, 7084.0], [4309.0, 6518.0], [4293.0, 6972.0], [4229.0, 7509.5], [4245.0, 6613.0], [4117.0, 6609.0], [4197.0, 6617.5], [4181.0, 7090.0], [4165.0, 6741.75], [4261.0, 6605.714285714285], [4549.0, 6735.2], [4485.0, 6943.0], [4501.0, 6920.333333333333], [4581.0, 6258.0], [4373.0, 6367.666666666667], [4389.0, 6941.0], [4469.0, 6270.0], [4453.0, 6265.0], [4837.0, 6302.333333333333], [4853.0, 6343.0], [4757.0, 6250.5], [4773.0, 6140.0], [4789.0, 6591.666666666667], [4821.0, 6177.5], [4645.0, 6516.666666666667], [4693.0, 6319.0], [4677.0, 6562.8], [4869.0, 6755.0], [4885.0, 6077.0], [4901.0, 6420.0], [4981.0, 6368.0], [4949.0, 6045.0], [4933.0, 6060.875], [2067.0, 7759.0], [2155.0, 7283.0], [2059.0, 7501.5], [2131.0, 7617.0], [2115.0, 7293.0], [2107.0, 7381.8], [2099.0, 7404.5], [2283.0, 7694.0], [2299.0, 7430.166666666666], [2275.0, 7243.0], [2203.0, 7976.25], [2179.0, 7589.0], [2211.0, 7474.0], [2267.0, 7297.5], [2259.0, 7245.0], [2251.0, 7245.0], [2411.0, 7162.0], [2427.0, 8309.0], [2371.0, 7982.0], [2419.0, 7160.0], [2403.0, 7349.5], [2331.0, 8153.0], [2323.0, 7446.0], [2363.0, 7514.5], [2355.0, 7669.0], [2347.0, 7465.0], [2339.0, 7217.5], [2395.0, 7165.0], [2387.0, 7170.0], [2547.0, 7821.0], [2499.0, 8494.0], [2515.0, 7389.0], [2507.0, 7867.5], [2555.0, 7359.0], [2539.0, 7146.0], [2531.0, 8060.0], [2443.0, 8082.0], [2435.0, 7984.0], [2451.0, 7715.0], [2491.0, 7142.0], [2475.0, 7364.333333333333], [2675.0, 7191.333333333333], [2683.0, 7225.5], [2659.0, 7998.0], [2587.0, 7240.0], [2563.0, 7214.0], [2611.0, 7957.5], [2595.0, 8140.0], [2651.0, 7040.0], [2635.0, 7007.0], [2627.0, 7691.0], [2795.0, 6937.0], [2811.0, 7412.0], [2699.0, 6974.0], [2691.0, 7094.0], [2771.0, 7181.0], [2747.0, 7106.5], [2731.0, 7305.0], [2723.0, 6954.0], [2939.0, 8011.0], [2891.0, 7028.0], [2923.0, 7364.0], [2875.0, 7039.0], [2827.0, 7547.0], [2819.0, 7073.5], [2867.0, 7371.0], [2907.0, 7141.0], [2899.0, 7030.0], [2883.0, 7091.0], [3043.0, 7453.0], [2947.0, 7075.666666666667], [3035.0, 7328.0], [3019.0, 7069.8], [2995.0, 7031.0], [2987.0, 7151.0], [2979.0, 7144.0], [3155.0, 7127.0], [3163.0, 6858.666666666667], [3131.0, 6810.0], [3123.0, 7235.5], [3099.0, 7369.8], [3083.0, 7486.5], [3075.0, 7546.0], [3219.0, 7198.0], [3267.0, 6879.0], [3259.0, 7092.0], [3355.0, 7296.0], [3451.0, 6841.0], [3427.0, 7063.0], [3395.0, 7114.333333333333], [3331.0, 6990.0], [3347.0, 7146.5], [3387.0, 7394.25], [3379.0, 7300.5], [3531.0, 6742.0], [3467.0, 6944.0], [3499.0, 7179.4], [3547.0, 6809.5], [3691.0, 6773.0], [3651.0, 7601.0], [3587.0, 7491.0], [3603.0, 7039.0], [3643.0, 6795.0], [3635.0, 7075.0], [3627.0, 7371.0], [3675.0, 7231.5], [3667.0, 7698.0], [3811.0, 6900.0], [3779.0, 6906.0], [3803.0, 6548.0], [3819.0, 6637.0], [3715.0, 6689.0], [3739.0, 7270.0], [3771.0, 7034.0], [3755.0, 6573.0], [3747.0, 6919.5], [3923.0, 6759.0], [3931.0, 6817.0], [3939.0, 7110.0], [3867.0, 6813.0], [3851.0, 6781.0], [3899.0, 6869.0], [3883.0, 6770.0], [4067.0, 7127.333333333333], [3971.0, 6668.75], [3987.0, 6899.25], [4003.0, 6672.666666666667], [4059.0, 6623.0], [4051.0, 6692.5], [4246.0, 6877.333333333333], [4342.0, 6364.0], [4262.0, 6765.0], [4310.0, 6406.0], [4134.0, 6663.428571428572], [4214.0, 6703.0], [4278.0, 6628.0], [4486.0, 6598.0], [4550.0, 7210.75], [4518.0, 6736.2], [4582.0, 6800.0], [4390.0, 6823.0], [4454.0, 6403.0], [4422.0, 6256.0], [4806.0, 7000.0], [4854.0, 6601.8], [4742.0, 6141.0], [4774.0, 6131.0], [4790.0, 6340.5], [4614.0, 6458.0], [4630.0, 6339.0], [4662.0, 6502.000000000001], [4694.0, 6434.0], [4998.0, 5959.111111111111], [4870.0, 6622.0], [4886.0, 6188.0], [4918.0, 6043.0], [4982.0, 6257.705882352941], [4966.0, 6349.0], [4135.0, 6605.0], [4295.0, 7040.5], [4343.0, 6523.0], [4247.0, 6944.5], [4279.0, 6499.5], [4119.0, 6605.0], [4199.0, 7233.666666666667], [4183.0, 6608.0], [4167.0, 6728.5], [4407.0, 6853.5], [4487.0, 6264.0], [4519.0, 7123.0], [4535.0, 6566.25], [4359.0, 6735.0], [4471.0, 6718.0], [4455.0, 6718.0], [4439.0, 6329.25], [4423.0, 6395.0], [4631.0, 6447.0], [4743.0, 6252.0], [4839.0, 6452.333333333333], [4759.0, 6130.0], [4775.0, 6242.0], [4791.0, 6233.0], [4615.0, 6680.5], [4647.0, 6339.0], [4663.0, 6711.5], [4727.0, 6143.0], [4711.0, 6249.0], [4679.0, 6643.666666666667], [4983.0, 6334.999999999999], [4887.0, 6073.0], [4903.0, 6202.142857142857], [4967.0, 6194.200000000001], [4951.0, 6043.5], [4935.0, 6042.0], [529.0, 8283.5], [539.0, 7762.666666666667], [517.0, 7835.0], [515.0, 7989.0], [513.0, 7871.0], [535.0, 7843.0], [533.0, 7846.0], [531.0, 8940.0], [527.0, 8526.0], [525.0, 8717.0], [523.0, 7843.0], [521.0, 7842.0], [573.0, 7785.0], [575.0, 7593.0], [571.0, 7596.0], [551.0, 8545.0], [547.0, 7753.0], [545.0, 7585.0], [567.0, 8226.0], [565.0, 8868.0], [561.0, 8340.5], [557.0, 8666.0], [555.0, 8441.0], [553.0, 8249.0], [607.0, 7615.0], [603.0, 7868.0], [597.0, 8331.0], [595.0, 7595.0], [593.0, 7595.0], [589.0, 8327.0], [587.0, 8551.0], [585.0, 7698.75], [577.0, 8453.0], [637.0, 7654.0], [639.0, 7659.333333333333], [635.0, 7882.333333333333], [629.0, 7624.0], [627.0, 7856.333333333333], [625.0, 7628.0], [619.0, 8322.0], [617.0, 7622.8], [615.0, 7628.0], [609.0, 7616.0], [665.0, 8640.0], [663.0, 8910.0], [659.0, 7912.0], [649.0, 7961.333333333333], [647.0, 7771.666666666667], [641.0, 8329.0], [697.0, 8302.0], [701.0, 8194.0], [703.0, 8347.0], [699.0, 8122.666666666667], [693.0, 8205.5], [691.0, 8304.333333333334], [685.0, 8211.0], [683.0, 8418.0], [677.0, 8413.0], [675.0, 8244.333333333334], [735.0, 8915.0], [733.0, 8373.75], [725.0, 8387.0], [723.0, 8400.5], [713.0, 8185.0], [709.0, 8132.5], [765.0, 9819.0], [767.0, 8235.0], [763.0, 8564.2], [757.0, 7921.0], [755.0, 8150.0], [753.0, 7815.0], [751.0, 7817.0], [743.0, 8007.666666666666], [741.0, 7821.0], [795.0, 7820.285714285715], [787.0, 8129.0], [785.0, 8032.0], [779.0, 8283.333333333334], [775.0, 8141.857142857143], [831.0, 7809.0], [827.0, 8248.0], [825.0, 7824.0], [819.0, 8788.0], [817.0, 8026.0], [813.0, 7956.0], [809.0, 7829.0], [807.0, 8127.0], [839.0, 7799.0], [861.0, 8113.0], [863.0, 8239.0], [857.0, 7998.0], [855.0, 7860.714285714285], [851.0, 7779.0], [845.0, 8016.5], [843.0, 7795.0], [841.0, 8015.0], [837.0, 7797.0], [835.0, 7893.4], [869.0, 8244.0], [893.0, 8099.0], [891.0, 8100.0], [889.0, 8237.75], [885.0, 8369.0], [879.0, 8100.0], [877.0, 7885.0], [867.0, 7944.5], [865.0, 7902.5], [903.0, 8100.0], [925.0, 7869.0], [923.0, 7988.0], [919.0, 7875.0], [917.0, 7878.0], [913.0, 8523.0], [909.0, 8097.0], [905.0, 7879.0], [901.0, 8717.0], [899.0, 7940.75], [897.0, 8106.0], [955.0, 8381.0], [953.0, 7962.0], [951.0, 8503.0], [945.0, 8673.0], [941.0, 8499.0], [939.0, 7859.5], [937.0, 7861.0], [935.0, 7943.333333333333], [931.0, 8086.0], [967.0, 8486.0], [979.0, 8082.0], [985.0, 8563.0], [983.0, 7850.0], [975.0, 8727.0], [973.0, 7832.0], [971.0, 7834.0], [969.0, 8212.5], [965.0, 8601.0], [963.0, 7840.0], [1023.0, 7894.0], [1015.0, 8251.0], [1005.0, 7678.0], [995.0, 7927.0], [993.0, 7826.166666666667], [1082.0, 8709.5], [1074.0, 7665.0], [1066.0, 8548.0], [1062.0, 8011.5], [1058.0, 8418.0], [1054.0, 7760.5], [1034.0, 7577.75], [1026.0, 7879.5], [1138.0, 8427.2], [1150.0, 7925.666666666667], [1146.0, 8116.0], [1142.0, 7691.5], [1122.0, 8377.666666666666], [1118.0, 7953.0], [1110.0, 8052.333333333333], [1098.0, 8054.0], [1090.0, 7836.0], [1206.0, 7562.0], [1214.0, 7832.0], [1202.0, 7557.333333333333], [1198.0, 7763.0], [1190.0, 7538.0], [1186.0, 7537.0], [1182.0, 8300.0], [1170.0, 8184.0], [1158.0, 8292.0], [1274.0, 7756.5], [1278.0, 8031.0], [1266.0, 8725.0], [1262.0, 7704.0], [1258.0, 8261.5], [1254.0, 8122.0], [1246.0, 7812.0], [1234.0, 7827.0], [1226.0, 8167.0], [1222.0, 7931.0], [1218.0, 7729.0], [1334.0, 8045.5], [1338.0, 8151.0], [1330.0, 7824.0], [1282.0, 8528.5], [1326.0, 8050.0], [1318.0, 9341.0], [1314.0, 7689.333333333333], [1310.0, 7690.0], [1306.0, 7692.0], [1298.0, 8621.0], [1402.0, 8088.5], [1386.0, 7908.0], [1378.0, 8335.0], [1374.0, 7669.0], [1358.0, 8119.0], [1346.0, 7684.25], [1470.0, 7601.0], [1466.0, 8514.0], [1450.0, 7633.0], [1446.0, 10002.0], [1442.0, 7644.0], [1434.0, 7788.5], [1426.0, 7990.0], [1414.0, 8135.0], [1534.0, 7765.5], [1526.0, 8068.0], [1518.0, 8714.0], [1506.0, 7779.666666666666], [1502.0, 7548.0], [1498.0, 7979.0], [1490.0, 7562.0], [1486.0, 7584.857142857143], [1482.0, 7586.0], [1598.0, 7406.0], [1582.0, 7409.0], [1578.0, 8267.0], [1566.0, 7599.0], [1546.0, 7971.666666666667], [1542.0, 8702.0], [1654.0, 7948.0], [1650.0, 7502.0], [1638.0, 7717.428571428572], [1634.0, 7386.0], [1630.0, 8047.0], [1622.0, 7387.0], [1618.0, 7386.333333333333], [1614.0, 7500.166666666667], [1714.0, 8335.5], [1722.0, 7603.333333333333], [1726.0, 7798.0], [1718.0, 7548.0], [1702.0, 7488.0], [1698.0, 7359.333333333333], [1690.0, 7364.5], [1686.0, 7366.0], [1678.0, 7376.5], [1670.0, 7386.0], [1778.0, 7327.0], [1786.0, 7325.0], [1790.0, 8159.0], [1782.0, 7337.0], [1766.0, 7326.0], [1762.0, 7322.0], [1758.0, 7327.0], [1742.0, 7333.0], [1734.0, 7413.5], [1754.0, 7331.0], [1746.0, 7511.0], [1850.0, 7307.0], [1846.0, 7303.0], [1842.0, 7314.0], [1830.0, 7318.5], [1826.0, 7319.0], [1822.0, 8150.0], [1810.0, 7631.0], [1794.0, 7744.0], [1914.0, 7578.0], [1902.0, 7909.5], [1898.0, 8406.0], [1882.0, 7790.0], [1878.0, 8027.75], [1874.0, 7788.0], [1870.0, 7474.833333333333], [1858.0, 7308.0], [1982.0, 7655.0], [1974.0, 7464.0], [1962.0, 7536.833333333334], [1958.0, 7473.0], [1950.0, 7477.0], [1946.0, 7480.0], [1942.0, 7568.571428571428], [1934.0, 8161.0], [2042.0, 8238.5], [2038.0, 8034.0], [2030.0, 7766.0], [1998.0, 8144.666666666667], [2002.0, 7585.75], [1990.0, 7768.0], [1986.0, 7871.0], [2164.0, 7494.0], [2156.0, 7746.0], [2116.0, 7286.0], [2108.0, 8412.0], [2052.0, 8987.0], [2076.0, 7298.0], [2060.0, 8016.5], [2092.0, 7510.5], [2284.0, 7717.0], [2292.0, 7816.5], [2300.0, 7695.0], [2252.0, 8812.0], [2276.0, 7828.0], [2236.0, 7250.5], [2188.0, 7272.5], [2204.0, 7482.0], [2220.0, 7508.8], [2268.0, 7242.0], [2260.0, 7464.0], [2332.0, 7330.0], [2380.0, 7176.0], [2420.0, 7160.0], [2412.0, 7160.75], [2348.0, 7315.0], [2308.0, 7229.0], [2316.0, 7228.0], [2324.0, 7223.0], [2340.0, 7221.0], [2396.0, 7165.0], [2372.0, 7182.0], [2516.0, 7386.0], [2524.0, 7401.8], [2500.0, 8936.0], [2492.0, 7141.0], [2484.0, 7152.714285714285], [2452.0, 7346.0], [2444.0, 7538.857142857143], [2668.0, 7111.333333333333], [2676.0, 7567.0], [2660.0, 7334.0], [2572.0, 7304.5], [2564.0, 7409.0], [2652.0, 7010.0], [2636.0, 7000.0], [2628.0, 6999.0], [2596.0, 8137.0], [2812.0, 7073.0], [2804.0, 6930.0], [2764.0, 7420.5], [2748.0, 6897.0], [2692.0, 7310.0], [2700.0, 7091.8], [2708.0, 6955.333333333333], [2740.0, 7033.375], [2780.0, 7256.666666666666], [2772.0, 7830.0], [2756.0, 7530.0], [2844.0, 7692.0], [2940.0, 7046.0], [2836.0, 7033.0], [2820.0, 7182.0], [2908.0, 7699.0], [2900.0, 7030.0], [2892.0, 7027.0], [2868.0, 7373.0], [2860.0, 7246.25], [2852.0, 7554.75], [2972.0, 7028.0], [3052.0, 7433.333333333333], [2956.0, 7041.0], [2948.0, 7151.0], [3028.0, 7137.0], [3020.0, 7022.0], [3004.0, 7240.0], [2988.0, 7031.0], [3164.0, 6834.166666666666], [3132.0, 6804.0], [3084.0, 7868.0], [3124.0, 7248.0], [3092.0, 7124.0], [3308.0, 7090.5], [3316.0, 6868.0], [3300.0, 7068.363636363636], [3212.0, 7433.0], [3204.0, 7158.666666666667], [3276.0, 6880.0], [3268.0, 7322.0], [3436.0, 7180.25], [3356.0, 7755.0], [3412.0, 6856.0], [3388.0, 8102.0], [3572.0, 6687.5], [3548.0, 7045.0], [3556.0, 6713.0], [3468.0, 7270.0], [3508.0, 7067.857142857143], [3500.0, 6946.0], [3660.0, 7012.0], [3668.0, 6778.0], [3692.0, 7910.0], [3612.0, 6817.0], [3604.0, 6827.0], [3596.0, 7091.5], [3636.0, 6801.0], [3812.0, 6547.0], [3780.0, 6551.0], [3820.0, 6536.0], [3788.0, 6689.75], [3796.0, 6805.0], [3732.0, 7084.666666666667], [3724.0, 6650.571428571428], [3740.0, 7400.0], [3772.0, 6654.0], [3764.0, 6561.0], [3756.0, 7385.0], [3748.0, 6563.0], [3804.0, 7248.0], [3908.0, 6637.5], [3916.0, 7886.0], [3844.0, 6851.0], [3852.0, 7122.0], [3900.0, 6781.333333333333], [3892.0, 6965.625000000001], [3932.0, 6535.0], [3924.0, 6537.0], [4092.0, 6615.0], [4044.0, 7037.0], [3972.0, 6869.0], [4004.0, 7003.0], [4052.0, 6627.0], [4328.0, 6404.7], [4344.0, 6592.0], [4312.0, 6405.333333333333], [4232.0, 7035.25], [4280.0, 6419.0], [4152.0, 6627.0], [4168.0, 7216.0], [4568.0, 6521.857142857142], [4488.0, 6263.0], [4536.0, 6481.0], [4600.0, 6402.888888888889], [4392.0, 6498.0], [4408.0, 6382.0], [4472.0, 6587.428571428571], [4456.0, 6613.5], [4440.0, 6372.0], [4424.0, 6336.6], [4808.0, 6387.666666666666], [4744.0, 6457.0], [4840.0, 6290.0], [4824.0, 6279.8], [4616.0, 6767.0], [4648.0, 6334.0], [4728.0, 6270.4], [4696.0, 6860.333333333333], [4680.0, 6644.0], [4904.0, 6365.749999999999], [5000.0, 7108.044711464066], [4888.0, 6447.0], [4920.0, 6172.6], [4984.0, 6021.6], [4968.0, 6350.0], [4952.0, 6077.666666666667], [4121.0, 6675.0], [4345.0, 7369.0], [4217.0, 6918.666666666667], [4105.0, 6611.0], [4153.0, 6736.0], [4393.0, 6538.5], [4521.0, 6276.0], [4377.0, 6436.6], [4473.0, 6407.0], [4457.0, 6960.0], [4441.0, 6722.0], [4425.0, 6725.0], [4857.0, 6550.6], [4777.0, 6273.428571428571], [4841.0, 6352.666666666667], [4825.0, 6335.333333333333], [4649.0, 6385.0], [4713.0, 6225.5], [4873.0, 6314.7], [4889.0, 6073.0], [4921.0, 6043.0], [4985.0, 6169.833333333333], [4969.0, 6281.0], [4953.0, 6643.5], [2165.0, 7297.8], [2149.0, 7287.0], [2125.0, 7292.0], [2117.0, 7409.0], [2077.0, 7630.0], [2069.0, 7312.0], [2093.0, 7351.0], [2197.0, 7278.0], [2253.0, 8501.0], [2293.0, 7702.0], [2285.0, 7242.0], [2189.0, 7273.0], [2181.0, 7493.5], [2229.0, 7257.6], [2221.0, 7479.0], [2269.0, 7242.0], [2261.0, 7353.5], [2405.0, 7526.5], [2429.0, 7160.0], [2421.0, 7684.0], [2413.0, 7157.0], [2333.0, 8466.0], [2373.0, 7180.0], [2365.0, 7243.0], [2357.0, 7497.5], [2341.0, 7219.0], [2533.0, 8060.0], [2557.0, 7678.0], [2549.0, 7353.0], [2541.0, 7359.0], [2461.0, 7749.0], [2445.0, 8213.0], [2493.0, 7239.0], [2485.0, 7503.0], [2477.0, 7536.5], [2517.0, 7963.0], [2637.0, 7003.0], [2677.0, 7667.0], [2565.0, 7252.0], [2581.0, 7021.0], [2653.0, 7008.0], [2645.0, 6996.0], [2717.0, 6951.0], [2757.0, 7359.0], [2797.0, 7306.0], [2789.0, 6947.0], [2709.0, 6955.0], [2701.0, 8082.0], [2749.0, 6926.0], [2741.0, 7528.0], [2781.0, 7168.0], [2765.0, 7944.0], [2917.0, 7147.125], [2933.0, 7404.0], [2877.0, 7148.666666666667], [2821.0, 7713.0], [2829.0, 7054.0], [2837.0, 7159.0], [2869.0, 7024.0], [2909.0, 7684.0], [2885.0, 7030.0], [3045.0, 7444.5], [3021.0, 7233.0], [3013.0, 7188.666666666667], [3053.0, 7455.0], [2973.0, 7027.0], [2957.0, 7284.857142857142], [2949.0, 7161.0], [2997.0, 7164.75], [2989.0, 7269.0], [2981.0, 7449.0], [3037.0, 7022.0], [3029.0, 7222.5], [3189.0, 7663.0], [3173.0, 7015.333333333333], [3093.0, 7239.0], [3165.0, 6802.0], [3317.0, 6951.75], [3325.0, 6869.0], [3301.0, 7303.0], [3229.0, 7218.666666666667], [3221.0, 7323.0], [3277.0, 7010.0], [3237.0, 6882.833333333334], [3437.0, 6852.0], [3341.0, 7367.666666666667], [3421.0, 8081.0], [3405.0, 7085.6], [3389.0, 7196.0], [3373.0, 7155.333333333333], [3365.0, 7528.0], [3485.0, 6814.0], [3525.0, 6758.333333333333], [3533.0, 7175.333333333333], [3557.0, 7135.142857142857], [3517.0, 7324.25], [3461.0, 7099.333333333333], [3509.0, 7502.0], [3501.0, 7887.0], [3493.0, 6800.0], [3605.0, 7387.0], [3709.0, 6585.0], [3653.0, 7418.5], [3685.0, 7030.666666666667], [3597.0, 7036.0], [3613.0, 6816.0], [3645.0, 6902.0], [3637.0, 7720.0], [3621.0, 6818.0], [3781.0, 7614.0], [3805.0, 6545.0], [3821.0, 6654.0], [3725.0, 7094.5], [3773.0, 7010.0], [3765.0, 6555.0], [3749.0, 6674.0], [3957.0, 6645.0], [3965.0, 6727.666666666667], [3933.0, 6524.0], [3941.0, 6747.0], [3893.0, 7801.0], [4077.0, 6960.25], [4045.0, 6634.0], [4029.0, 6636.0], [3981.0, 7052.142857142857], [3989.0, 7914.0], [3997.0, 6943.25], [4013.0, 6814.714285714285], [4053.0, 7088.0], [4314.0, 6628.0], [4122.0, 6615.0], [4218.0, 7077.0], [4186.0, 6618.75], [4170.0, 6620.0], [4362.0, 6787.666666666667], [4490.0, 6704.0], [4506.0, 6819.0], [4378.0, 7249.0], [4458.0, 6266.0], [4858.0, 6893.7], [4778.0, 6789.0], [4810.0, 6429.0], [4730.0, 6359.333333333333], [4650.0, 6494.5], [4714.0, 6571.0], [4682.0, 6556.0], [4874.0, 6858.0], [4890.0, 6074.333333333333], [4906.0, 6264.333333333333], [4922.0, 6152.666666666667], [4347.0, 6755.333333333333], [4331.0, 6375.0], [4267.0, 6931.0], [4315.0, 6582.0], [4155.0, 6620.833333333333], [4107.0, 6662.888888888888], [4187.0, 6774.333333333333], [4555.0, 6344.2], [4571.0, 6261.0], [4491.0, 6603.333333333333], [4603.0, 6263.0], [4395.0, 6890.666666666667], [4411.0, 6672.666666666667], [4475.0, 7049.0], [4443.0, 6262.0], [4843.0, 6595.333333333334], [4747.0, 6143.0], [4795.0, 6329.0], [4859.0, 6669.0], [4827.0, 6125.0], [4619.0, 6341.333333333333], [4731.0, 6142.0], [4715.0, 6138.0], [4875.0, 6273.333333333333], [4987.0, 6163.0], [4891.0, 6070.0], [4907.0, 6448.714285714286], [4923.0, 6046.0], [4971.0, 6087.75], [4955.0, 6032.0], [4939.0, 6130.899999999999], [1079.0, 8698.0], [1067.0, 8087.0], [1055.0, 8214.4], [1047.0, 7669.5], [1031.0, 7533.0], [1027.0, 8079.0], [1151.0, 7535.0], [1147.0, 8083.0], [1143.0, 7886.333333333333], [1123.0, 8296.0], [1119.0, 7954.0], [1107.0, 8306.666666666666], [1099.0, 8325.0], [1095.0, 8551.8], [1207.0, 7570.0], [1215.0, 7934.0], [1203.0, 7959.0], [1195.0, 8296.5], [1187.0, 7548.0], [1175.0, 7552.0], [1167.0, 7633.833333333334], [1163.0, 7536.0], [1159.0, 7843.0], [1275.0, 7778.5], [1279.0, 7703.0], [1267.0, 9136.0], [1263.0, 7703.0], [1255.0, 7704.0], [1243.0, 7930.666666666667], [1239.0, 7713.0], [1235.0, 8168.0], [1223.0, 8029.8], [1219.0, 7729.0], [1339.0, 7687.0], [1335.0, 8904.0], [1331.0, 7990.5], [1327.0, 7806.0], [1307.0, 8623.0], [1299.0, 7864.0], [1295.0, 8063.5], [1287.0, 9347.0], [1395.0, 8323.0], [1391.0, 8138.0], [1387.0, 8149.0], [1375.0, 8156.0], [1367.0, 7673.0], [1363.0, 8309.666666666666], [1359.0, 7674.0], [1347.0, 7671.0], [1463.0, 7617.666666666667], [1455.0, 7632.0], [1435.0, 8553.0], [1527.0, 8930.0], [1531.0, 7500.0], [1523.0, 8410.0], [1515.0, 7533.5], [1511.0, 7533.0], [1507.0, 8936.0], [1495.0, 9291.5], [1491.0, 7885.0], [1487.0, 7746.0], [1475.0, 7674.000000000001], [1599.0, 8490.0], [1587.0, 8640.0], [1575.0, 7468.5], [1567.0, 8164.0], [1547.0, 9273.0], [1543.0, 7608.0], [1539.0, 7610.0], [1659.0, 7568.142857142857], [1647.0, 7442.0], [1643.0, 7377.0], [1639.0, 7958.0], [1627.0, 7698.5], [1619.0, 8683.0], [1607.0, 7951.0], [1603.0, 7398.5], [1723.0, 7907.0], [1719.0, 7348.0], [1711.0, 7382.6], [1683.0, 7911.5], [1679.0, 7380.0], [1675.0, 7815.666666666667], [1671.0, 8131.0], [1743.0, 7865.0], [1791.0, 8266.0], [1779.0, 7324.0], [1771.0, 8288.333333333334], [1763.0, 8073.0], [1759.0, 7324.0], [1751.0, 7329.0], [1747.0, 8525.0], [1739.0, 7879.0], [1731.0, 7435.333333333333], [1807.0, 7304.0], [1851.0, 7801.0], [1843.0, 7313.0], [1831.0, 7944.0], [1819.0, 7456.571428571428], [1815.0, 7307.0], [1811.0, 9316.0], [1799.0, 7529.5], [1795.0, 8053.0], [1875.0, 8237.0], [1871.0, 7797.0], [1859.0, 8024.0], [1935.0, 7901.0], [1983.0, 7769.0], [1979.0, 7602.0], [1971.0, 7570.625], [1963.0, 8008.0], [1951.0, 7480.0], [1943.0, 8010.0], [1931.0, 7650.0], [1923.0, 7741.333333333333], [2047.0, 8056.4], [2019.0, 7879.0], [2039.0, 7981.5], [1991.0, 7637.75], [1987.0, 7769.0], [2027.0, 7425.0], [2023.0, 8081.666666666667], [2015.0, 7888.5], [2011.0, 7447.666666666667], [2003.0, 9032.0], [2078.0, 7299.0], [2166.0, 7486.0], [2070.0, 7483.5], [2054.0, 8082.0], [2126.0, 7291.0], [2118.0, 7995.0], [2102.0, 7406.333333333333], [2094.0, 7306.0], [2086.0, 7356.625], [2278.0, 7242.0], [2262.0, 7460.0], [2230.0, 7463.0], [2222.0, 7833.0], [2214.0, 7645.333333333333], [2334.0, 7217.0], [2414.0, 8210.0], [2310.0, 7425.5], [2390.0, 7168.75], [2374.0, 8349.0], [2366.0, 7190.0], [2350.0, 7614.5], [2446.0, 8207.0], [2534.0, 7494.5], [2494.0, 7819.0], [2486.0, 7502.0], [2470.0, 7517.0], [2526.0, 7374.0], [2502.0, 7387.0], [2678.0, 7002.0], [2670.0, 7330.0], [2638.0, 7333.0], [2630.0, 7682.0], [2622.0, 7545.5], [2566.0, 7605.0], [2574.0, 7250.0], [2590.0, 7714.5], [2606.0, 7816.5], [2718.0, 7305.0], [2798.0, 6937.0], [2758.0, 6881.0], [2790.0, 6946.0], [2710.0, 6955.5], [2702.0, 7433.0], [2694.0, 6976.0], [2750.0, 6896.0], [2742.0, 6897.0], [2734.0, 6908.0], [2766.0, 6859.0], [2918.0, 7031.0], [2934.0, 7139.0], [2838.0, 7435.0], [2830.0, 7163.8], [2902.0, 7029.0], [2878.0, 7155.0], [2854.0, 7032.0], [3070.0, 7889.0], [3062.0, 7110.0], [2998.0, 7347.5], [2958.0, 7035.0], [2966.0, 7089.0], [2990.0, 7440.0], [3174.0, 6802.0], [3198.0, 7091.0], [3094.0, 7122.0], [3166.0, 7011.0], [3142.0, 7018.875], [3134.0, 7058.5], [3126.0, 6802.0], [3118.0, 7298.0], [3110.0, 7011.5], [3310.0, 7598.0], [3326.0, 6951.0], [3286.0, 7161.0], [3262.0, 6874.0], [3254.0, 6887.0], [3238.0, 7009.0], [3446.0, 7197.5], [3454.0, 7623.0], [3430.0, 7377.0], [3390.0, 7986.0], [3342.0, 7004.0], [3350.0, 6981.0], [3366.0, 6979.0], [3406.0, 7066.0], [3398.0, 7080.0], [3574.0, 6688.0], [3526.0, 6941.0], [3566.0, 6841.0], [3558.0, 7273.0], [3478.0, 6897.833333333333], [3462.0, 6844.0], [3518.0, 7153.0], [3694.0, 6763.5], [3710.0, 6589.0], [3670.0, 6881.0], [3678.0, 7234.0], [3686.0, 6777.0], [3598.0, 6826.0], [3590.0, 7440.0], [3646.0, 6912.0], [3638.0, 6801.0], [3782.0, 6893.0], [3830.0, 6809.142857142858], [3790.0, 7135.0], [3774.0, 6653.0], [3734.0, 7093.0], [3766.0, 6562.0], [3758.0, 6571.333333333333], [3942.0, 6534.0], [3918.0, 6527.0], [3902.0, 6516.0], [3870.0, 6766.0], [3862.0, 6892.0], [3894.0, 6763.0], [3934.0, 6763.0], [4078.0, 7228.333333333333], [4086.0, 6611.666666666667], [4070.0, 6629.0], [3982.0, 6638.0], [3998.0, 7338.0], [4014.0, 6877.0], [4006.0, 6935.0], [4062.0, 7219.5], [4300.0, 7058.2], [4236.0, 6726.333333333333], [4252.0, 6769.714285714285], [4284.0, 6812.0], [4108.0, 6608.0], [4124.0, 6644.0], [4140.0, 6619.0], [4156.0, 7522.0], [4188.0, 7624.0], [4604.0, 6393.0], [4492.0, 6933.0], [4524.0, 6635.8], [4540.0, 6462.0], [4572.0, 6270.0], [4476.0, 6278.0], [4364.0, 6780.5], [4412.0, 7151.0], [4444.0, 6263.0], [4428.0, 6257.0], [4860.0, 6207.333333333333], [4748.0, 6138.666666666667], [4764.0, 6205.888888888889], [4796.0, 6178.75], [4812.0, 6507.428571428572], [4636.0, 6331.0], [4716.0, 6191.0], [4700.0, 6515.571428571428], [4892.0, 6322.25], [4876.0, 6309.0], [4908.0, 6488.5], [4988.0, 6044.111111111111], [4972.0, 5941.727272727273], [4940.0, 6047.5], [4317.0, 6582.5], [4237.0, 7080.0], [4301.0, 7186.0], [4125.0, 6747.0], [4157.0, 7200.0], [4205.0, 7095.0], [4269.0, 6702.333333333333], [4253.0, 6710.0], [4573.0, 6259.833333333333], [4493.0, 7080.5], [4509.0, 6904.0], [4541.0, 6263.0], [4397.0, 6605.333333333333], [4461.0, 6265.5], [4749.0, 6301.5], [4797.0, 6282.0], [4829.0, 6159.333333333333], [4733.0, 6141.0], [4621.0, 6338.0], [4653.0, 6329.25], [4669.0, 6466.75], [4685.0, 6563.25], [4877.0, 6356.5], [4989.0, 6025.499999999999], [4909.0, 6354.5], [4973.0, 6062.5], [4941.0, 6049.0], [2151.0, 7286.0], [2159.0, 7594.0], [2055.0, 7911.0], [2135.0, 7289.0], [2127.0, 7740.0], [2111.0, 7291.0], [2087.0, 7625.0], [2191.0, 7434.0], [2303.0, 7690.666666666667], [2279.0, 7827.0], [2199.0, 7610.333333333333], [2183.0, 7273.0], [2239.0, 7705.333333333333], [2231.0, 7832.0], [2223.0, 7479.0], [2215.0, 7596.0], [2271.0, 7703.5], [2375.0, 7183.0], [2383.0, 7174.0], [2423.0, 7232.4], [2319.0, 7570.5], [2311.0, 8908.0], [2367.0, 7188.0], [2351.0, 7210.0], [2399.0, 7475.666666666667], [2535.0, 7652.0], [2559.0, 7644.5], [2551.0, 7946.333333333333], [2543.0, 7516.666666666667], [2495.0, 7386.0], [2455.0, 7344.0], [2487.0, 7142.0], [2471.0, 7254.25], [2527.0, 7943.0], [2519.0, 7152.0], [2663.0, 7163.5], [2671.0, 7571.0], [2583.0, 7016.0], [2575.0, 7600.0], [2567.0, 7148.0], [2615.0, 7631.0], [2607.0, 8123.0], [2647.0, 7146.875], [2799.0, 6936.25], [2815.0, 7063.0], [2791.0, 6945.0], [2711.0, 6953.0], [2759.0, 6880.0], [2751.0, 7303.0], [2727.0, 7181.333333333333], [2919.0, 7367.0], [2927.0, 7261.4], [2847.0, 7299.25], [2831.0, 7052.0], [2863.0, 7031.0], [2855.0, 7309.0], [2895.0, 7027.0], [2887.0, 7031.333333333333], [3055.0, 7294.5], [3071.0, 7459.0], [2975.0, 7028.0], [2967.0, 7030.333333333333], [2959.0, 7260.0], [3031.0, 7180.0], [3023.0, 7566.0], [3007.0, 7137.666666666667], [2999.0, 7032.0], [3199.0, 8226.0], [3175.0, 6806.0], [3167.0, 6797.0], [3143.0, 7131.0], [3103.0, 7140.75], [3079.0, 7445.0], [3311.0, 7036.0], [3327.0, 6930.0], [3303.0, 7093.5], [3231.0, 7060.5], [3207.0, 7260.666666666667], [3287.0, 6886.0], [3279.0, 7155.5], [3271.0, 6881.5], [3247.0, 6879.5], [3239.0, 7893.0], [3447.0, 8096.0], [3439.0, 7383.0], [3455.0, 7060.0], [3431.0, 6881.0], [3415.0, 6862.0], [3391.0, 7601.0], [3383.0, 7049.25], [3559.0, 8000.5], [3567.0, 6697.0], [3527.0, 6949.0], [3575.0, 6937.0], [3543.0, 7322.0], [3479.0, 7172.0], [3471.0, 6825.0], [3519.0, 6761.0], [3511.0, 7618.5], [3495.0, 6801.0], [3655.0, 7633.666666666667], [3695.0, 6976.0], [3647.0, 6792.0], [3615.0, 6819.0], [3623.0, 6814.0], [3823.0, 7352.5], [3815.0, 6540.666666666667], [3839.0, 6873.5], [3783.0, 7260.0], [3807.0, 6774.5], [3831.0, 7341.0], [3775.0, 7726.0], [3719.0, 6695.0], [3735.0, 6686.0], [3743.0, 6731.0], [3759.0, 6568.0], [3751.0, 7746.0], [3959.0, 6755.0], [3919.0, 6649.4], [3911.0, 6596.0], [3927.0, 6537.0], [3935.0, 7117.0], [3943.0, 7339.0], [3871.0, 6818.5], [3903.0, 7322.0], [3895.0, 6524.0], [4079.0, 7530.5], [4087.0, 6925.25], [4071.0, 6625.75], [3991.0, 7352.0], [4023.0, 6732.142857142858], [4063.0, 7532.0], [4318.0, 6391.0], [4302.0, 6766.0], [4238.0, 6609.5], [4270.0, 6740.0], [4206.0, 6736.166666666667], [4190.0, 6736.0], [4606.0, 6263.4], [4574.0, 6906.0], [4494.0, 7187.5], [4510.0, 7031.0], [4526.0, 6777.333333333333], [4366.0, 6924.0], [4398.0, 6367.0], [4446.0, 6261.5], [4846.0, 6553.571428571428], [4862.0, 6418.0], [4750.0, 6569.0], [4798.0, 6231.0], [4830.0, 6230.0], [4814.0, 6223.5], [4622.0, 6342.333333333333], [4654.0, 6595.5], [4686.0, 6636.0], [4878.0, 6305.0], [4990.0, 5983.125], [4910.0, 6151.0], [4926.0, 6047.0], [4942.0, 6049.0], [4335.0, 6444.125], [4255.0, 6720.5], [4271.0, 6723.0], [4223.0, 7071.0], [4207.0, 7238.0], [4191.0, 6742.0], [4559.0, 6561.6], [4607.0, 6469.0], [4591.0, 6266.111111111111], [4527.0, 6272.0], [4479.0, 6652.0], [4367.0, 6485.0], [4415.0, 6263.0], [4447.0, 6462.333333333333], [4831.0, 6696.5], [4751.0, 6137.0], [4815.0, 6583.375], [4623.0, 6342.0], [4639.0, 6418.75], [4655.0, 6441.0], [4671.0, 6600.5], [4703.0, 6499.166666666667], [4975.0, 5841.0], [4895.0, 6082.875], [4927.0, 6046.666666666667], [4959.0, 6248.200000000001], [4943.0, 6048.0], [1.0, 8631.0]], "isOverall": false, "label": "Add To My Short URLs Request", "isController": false}, {"data": [[4495.321359999999, 7144.38364000002]], "isOverall": false, "label": "Add To My Short URLs Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 5000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 119.36666666666666, "minX": 1.59420774E12, "maxY": 259462.05, "series": [{"data": [[1.59420774E12, 352.85], [1.5942078E12, 259462.05]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.59420774E12, 119.36666666666666], [1.5942078E12, 88789.96666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5942078E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 3051.7058823529405, "minX": 1.59420774E12, "maxY": 7149.957261876109, "series": [{"data": [[1.59420774E12, 3051.7058823529405], [1.5942078E12, 7149.957261876109]], "isOverall": false, "label": "Add To My Short URLs Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5942078E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 3042.7058823529414, "minX": 1.59420774E12, "maxY": 7149.889649923896, "series": [{"data": [[1.59420774E12, 3042.7058823529414], [1.5942078E12, 7149.889649923896]], "isOverall": false, "label": "Add To My Short URLs Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5942078E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 65.75763037731288, "minX": 1.59420774E12, "maxY": 107.32352941176472, "series": [{"data": [[1.59420774E12, 107.32352941176472], [1.5942078E12, 65.75763037731288]], "isOverall": false, "label": "Add To My Short URLs Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5942078E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2871.0, "minX": 1.59420774E12, "maxY": 14533.0, "series": [{"data": [[1.59420774E12, 3184.0], [1.5942078E12, 14533.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.59420774E12, 2871.0], [1.5942078E12, 5171.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.59420774E12, 2871.0], [1.5942078E12, 5173.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.59420774E12, 2871.0], [1.5942078E12, 5172.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.59420774E12, 2871.0], [1.5942078E12, 3257.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.59420774E12, 3132.5], [1.5942078E12, 6613.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5942078E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 3132.5, "minX": 10.0, "maxY": 11421.0, "series": [{"data": [[33.0, 3760.0], [520.0, 6410.0], [34.0, 3132.5], [548.0, 6604.0], [558.0, 7115.0], [562.0, 7721.0], [577.0, 9372.0], [595.0, 5968.0], [588.0, 6639.0], [598.0, 6977.5], [620.0, 8238.0], [609.0, 6183.0], [642.0, 7362.0], [641.0, 10284.0], [658.0, 5479.5], [646.0, 5821.5], [686.0, 5615.0], [717.0, 6362.0], [711.0, 7323.0], [732.0, 7405.0], [762.0, 6025.5], [743.0, 5861.0], [760.0, 7594.5], [738.0, 5389.0], [752.0, 5498.0], [776.0, 8837.0], [787.0, 5773.0], [791.0, 7292.0], [830.0, 5307.0], [804.0, 7584.0], [53.0, 4519.0], [834.0, 11421.0], [855.0, 5612.0], [858.0, 7550.5], [61.0, 6143.0], [90.0, 8192.5], [112.0, 7513.0], [10.0, 6371.0], [395.0, 5392.0], [454.0, 7982.5], [471.0, 7981.0], [494.0, 7490.0], [504.0, 7297.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 858.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 3128.0, "minX": 10.0, "maxY": 11421.0, "series": [{"data": [[33.0, 3760.0], [520.0, 6410.0], [34.0, 3128.0], [548.0, 6604.0], [558.0, 7115.0], [562.0, 7721.0], [577.0, 9372.0], [595.0, 5968.0], [588.0, 6639.0], [598.0, 6977.5], [620.0, 8238.0], [609.0, 6183.0], [642.0, 7362.0], [641.0, 10284.0], [658.0, 5479.5], [646.0, 5821.5], [686.0, 5615.0], [717.0, 6362.0], [711.0, 7323.0], [732.0, 7405.0], [762.0, 6025.5], [743.0, 5861.0], [760.0, 7594.0], [738.0, 5389.0], [752.0, 5498.0], [776.0, 8837.0], [787.0, 5773.0], [791.0, 7292.0], [830.0, 5307.0], [804.0, 7584.0], [53.0, 4519.0], [834.0, 11421.0], [855.0, 5612.0], [858.0, 7550.5], [61.0, 6143.0], [90.0, 8192.5], [112.0, 7513.0], [10.0, 6370.5], [395.0, 5392.0], [454.0, 7982.5], [471.0, 7981.0], [494.0, 7489.5], [504.0, 7297.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 858.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.59420774E12, "maxY": 333.3333333333333, "series": [{"data": [[1.59420774E12, 83.33333333333333], [1.5942078E12, 333.3333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5942078E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.5666666666666667, "minX": 1.59420774E12, "maxY": 416.1, "series": [{"data": [[1.59420774E12, 0.5666666666666667], [1.5942078E12, 416.1]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5942078E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.5666666666666667, "minX": 1.59420774E12, "maxY": 416.1, "series": [{"data": [[1.59420774E12, 0.5666666666666667], [1.5942078E12, 416.1]], "isOverall": false, "label": "Add To My Short URLs Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5942078E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.5666666666666667, "minX": 1.59420774E12, "maxY": 416.1, "series": [{"data": [[1.59420774E12, 0.5666666666666667], [1.5942078E12, 416.1]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5942078E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

